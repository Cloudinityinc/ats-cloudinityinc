AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template to fetch data from DynamoDB

Resources:
  DynamoDBFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBReadPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:BatchGetItem
                Resource: "*"
        - PolicyName: CloudWatchLogsFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: logs:*
                Resource: "*"

  DynamoDBFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fetching-dynamo
      Handler: fetching-dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref DynamoDBFunction
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:GetItem
                - dynamodb:BatchGetItem
              Resource: "*"
        - CloudWatchLogsFullAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /data
            Method: GET
      Environment:
        Variables:
          TABLE_NAME: "ats-cloudinity-table"

  ApiWithCors:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ApiWithCors}.execute-api.${AWS::Region}.amazonaws.com/Prod/data"
