{"ast":null,"code":"var _jsxFileName = \"/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/Users.jsx\",\n  _s = $RefreshSig$();\nimport Sidebar from \"../components/Sidebar\";\n\n// src/components/UserTable.js\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [visibleColumns, setVisibleColumns] = useState([\"ReqId\", \"FullName\", \"EmailID\", \"Role\", \"DOB\", \"ReqSkills\", \"ReqCreationDate\", \"ReqTitle\", \"ImmigrationStatus\", \"ContractType\"\n  // Initially visible columns. Adjust as needed.\n  ]);\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const allColumns = [\n  // \"ReqId\",\n  \"FullName\",\n  // \"EmailID\",\n  \"Role\", \"DOB\", \"ReqSkills\", \"ReqCreationDate\", \"ReqTitle\", \"ImmigrationStatus\", \"ContractType\", \"SubmissionDate\", \"ReqSubmissionEndDate\", \"CandidateCurrentLocation\", \"ContactNumber\", \"RecruiterName\", \"State\", \"SubmissionStatus\", \"VendorRate\", \"CandidatePayRate\", \"BillRateMargin\", \"BillRate\", \"ResumeSource\",\n  // \"EmailID\",\n  \"VendorID\", \"LinkedInID\", \"EmployerInformation\", \"ProfessionalReferences\", \"ResumeFormattingNeeded\", \"FormattedBy\"];\n  const toggleColumnVisibility = column => {\n    setVisibleColumns(prev => prev.includes(column) ? prev.filter(c => c !== column) : [...prev, column]);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://ue1ljpk7rd.execute-api.us-east-1.amazonaws.com/Prod/data\");\n        if (!response.ok) {\n          throw new Error(\"Data could not be fetched!\");\n        } else {\n          const data = await response.json();\n          setData(data); // Assuming the response JSON structure matches your data requirement\n          console.log(\"Data fetched successfully: \", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // return (\n  //   <div className=\"Users Table flex\">\n  //     <Sidebar />\n  //     <div className=\"overflow-x-auto relative shadow-md sm:rounded-lg m-8\">\n  //       {/* Filter Button */}\n  //       <div>\n  //         <button\n  //           onClick={() => setIsFilterVisible(!isFilterVisible)}\n  //           className=\"mb-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded origin-top-right \"\n  //         >\n  //           Filter\n  //         </button>\n  //         {isFilterVisible && (\n  //           <div className=\"absolute z-10 bg-white p-4 shadow-lg rounded\">\n  //             {allColumns.map((column) => (\n  //               <div key={column}>\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   checked={visibleColumns.includes(column)}\n  //                   onChange={() => toggleColumnVisibility(column)}\n  //                 />{\" \"}\n  //                 {column}\n  //               </div>\n  //             ))}\n  //           </div>\n  //         )}\n  //       </div>\n\n  //       <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n  //         {/* Table Header */}\n  //         <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n  //           <tr>\n  //             {allColumns\n  //               .filter((column) => visibleColumns.includes(column))\n  //               .map((column) => (\n  //                 <th key={column} scope=\"col\" className=\"py-3 px-6\">\n  //                   {column}\n  //                 </th>\n  //               ))}\n  //           </tr>\n  //         </thead>\n  //         {/* Table Body */}\n  //         <tbody>\n  //           {data.map((item, index) => (\n  //             <tr\n  //               key={index}\n  //               className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n  //             >\n  //               {allColumns\n  //                 .filter((column) => visibleColumns.includes(column))\n  //                 .map((column) => (\n  //                   <td key={column} className=\"py-4 px-6\">\n  //                     {item[column]}\n  //                   </td>\n  //                 ))}\n  //             </tr>\n  //           ))}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   </div>\n  // );\n\n  // return (\n  //   <div className=\"Users Table flex\">\n  //     <Sidebar />\n  //     <div className=\"flex-1 overflow-x-auto relative shadow-md sm:rounded-lg m-8\">\n  //       {/* Filter Button aligned to the right */}\n  //       <div className=\"flex justify-end mb-4\">\n  //         <button\n  //           onClick={() => setIsFilterVisible(!isFilterVisible)}\n  //           className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n  //         >\n  //           Filter\n  //         </button>\n  //         {isFilterVisible && (\n  //           <div\n  //             className=\"absolute z-10 bg-white p-4 shadow-lg rounded\"\n  //             style={{ minWidth: \"200px\", right: \"10px\" }} // Ensure dropdown does not shrink\n  //           >\n  //             {allColumns.map((column) => (\n  //               <div key={column} className=\"flex items-center\">\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   id={column}\n  //                   checked={visibleColumns.includes(column)}\n  //                   onChange={() => toggleColumnVisibility(column)}\n  //                 />\n  //                 <label htmlFor={column} className=\"ml-2\">\n  //                   {column}\n  //                 </label>\n  //               </div>\n  //             ))}\n  //           </div>\n  //         )}\n  //       </div>\n\n  //       <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n  //         {/* Table Header */}\n  //         <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n  //           <tr>\n  //             {allColumns\n  //               .filter((column) => visibleColumns.includes(column))\n  //               .map((column) => (\n  //                 <th key={column} scope=\"col\" className=\"py-3 px-6\">\n  //                   {column}\n  //                 </th>\n  //               ))}\n  //           </tr>\n  //         </thead>\n  //         {/* Table Body */}\n  //         <tbody>\n  //           {data.map((item, index) => (\n  //             <tr\n  //               key={index}\n  //               className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n  //             >\n  //               {allColumns\n  //                 .filter((column) => visibleColumns.includes(column))\n  //                 .map((column) => (\n  //                   <td key={column} className=\"py-4 px-6\">\n  //                     {item[column]}\n  //                   </td>\n  //                 ))}\n  //             </tr>\n  //           ))}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   </div>\n  // );\n\n  // return (\n  //   <div className=\"Users Table flex\">\n  //     <Sidebar />\n  //     <div className=\"flex-1 overflow-x-auto relative shadow-md sm:rounded-lg m-8\">\n  //       {/* Filter Button aligned to the right with dropdown */}\n  //       <div className=\"flex justify-end relative mb-4\">\n  //         <button\n  //           onClick={() => setIsFilterVisible(!isFilterVisible)}\n  //           className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n  //         >\n  //           Filter\n  //         </button>\n  //         {isFilterVisible && (\n  //           <div\n  //             className=\"origin-top-right absolute right-0 mt-2 bg-white p-4 shadow-lg rounded\"\n  //             style={{ minWidth: \"200px\" }}\n  //           >\n  //             {allColumns.map((column) => (\n  //               <div key={column} className=\"flex items-center\">\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   id={column}\n  //                   checked={visibleColumns.includes(column)}\n  //                   onChange={() => toggleColumnVisibility(column)}\n  //                 />\n  //                 <label htmlFor={column} className=\"ml-2\">\n  //                   {column}\n  //                 </label>\n  //               </div>\n  //             ))}\n  //           </div>\n  //         )}\n  //       </div>\n\n  //       <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n  //         {/* Table Header */}\n  //         <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n  //           <tr>\n  //             {visibleColumns.map((column) => (\n  //               <th key={column} scope=\"col\" className=\"py-3 px-6\">\n  //                 {column}\n  //               </th>\n  //             ))}\n  //           </tr>\n  //         </thead>\n  //         {/* Table Body */}\n  //         <tbody>\n  //           {data.map((item, index) => (\n  //             <tr\n  //               key={index}\n  //               className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n  //             >\n  //               {visibleColumns.map((column) => (\n  //                 <td key={column} className=\"py-4 px-6\">\n  //                   {item[column] ?? \"-\"}\n  //                 </td>\n  //               ))}\n  //             </tr>\n  //           ))}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 m-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsFilterVisible(!isFilterVisible),\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded relative\",\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), isFilterVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute right-0 mt-12 bg-white p-4 shadow-lg rounded w-56\",\n            children: allColumns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: column,\n                checked: visibleColumns.includes(column),\n                onChange: () => toggleColumnVisibility(column),\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: column,\n                children: column\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this)]\n            }, column, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto relative shadow-md sm:rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full text-sm text-left text-gray-500 dark:text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: visibleColumns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"py-3 px-6\",\n                children: column\n              }, column, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\",\n              children: visibleColumns.map(column => {\n                var _item$column;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"py-4 px-6\",\n                  children: (_item$column = item[column]) !== null && _item$column !== void 0 ? _item$column : \"-\"\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this);\n              })\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"Y6yxGKvgX1TPm593+K/lQfT2cSU=\");\n_c = UsersPage;\nexport default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["Sidebar","React","useState","useEffect","jsxDEV","_jsxDEV","UsersPage","_s","data","setData","visibleColumns","setVisibleColumns","isFilterVisible","setIsFilterVisible","allColumns","toggleColumnVisibility","column","prev","includes","filter","c","fetchData","response","fetch","ok","Error","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","id","checked","onChange","htmlFor","scope","item","index","_item$column","_c","$RefreshReg$"],"sources":["/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/Users.jsx"],"sourcesContent":["import Sidebar from \"../components/Sidebar\";\n\n// src/components/UserTable.js\nimport React, { useState, useEffect } from \"react\";\n\nconst UsersPage = () => {\n  const [data, setData] = useState([]);\n  const [visibleColumns, setVisibleColumns] = useState([\n    \"ReqId\",\n    \"FullName\",\n    \"EmailID\",\n    \"Role\",\n    \"DOB\",\n    \"ReqSkills\",\n    \"ReqCreationDate\",\n    \"ReqTitle\",\n    \"ImmigrationStatus\",\n    \"ContractType\",\n    // Initially visible columns. Adjust as needed.\n  ]);\n\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const allColumns = [\n    // \"ReqId\",\n    \"FullName\",\n    // \"EmailID\",\n    \"Role\",\n    \"DOB\",\n    \"ReqSkills\",\n    \"ReqCreationDate\",\n    \"ReqTitle\",\n    \"ImmigrationStatus\",\n    \"ContractType\",\n    \"SubmissionDate\",\n    \"ReqSubmissionEndDate\",\n    \"CandidateCurrentLocation\",\n    \"ContactNumber\",\n    \"RecruiterName\",\n    \"State\",\n    \"SubmissionStatus\",\n    \"VendorRate\",\n    \"CandidatePayRate\",\n    \"BillRateMargin\",\n    \"BillRate\",\n    \"ResumeSource\",\n    // \"EmailID\",\n    \"VendorID\",\n    \"LinkedInID\",\n    \"EmployerInformation\",\n    \"ProfessionalReferences\",\n    \"ResumeFormattingNeeded\",\n    \"FormattedBy\",\n  ];\n\n  const toggleColumnVisibility = (column) => {\n    setVisibleColumns((prev) =>\n      prev.includes(column)\n        ? prev.filter((c) => c !== column)\n        : [...prev, column]\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"https://ue1ljpk7rd.execute-api.us-east-1.amazonaws.com/Prod/data\"\n        );\n        if (!response.ok) {\n          throw new Error(\"Data could not be fetched!\");\n        } else {\n          const data = await response.json();\n          setData(data); // Assuming the response JSON structure matches your data requirement\n          console.log(\"Data fetched successfully: \", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // return (\n  //   <div className=\"Users Table flex\">\n  //     <Sidebar />\n  //     <div className=\"overflow-x-auto relative shadow-md sm:rounded-lg m-8\">\n  //       {/* Filter Button */}\n  //       <div>\n  //         <button\n  //           onClick={() => setIsFilterVisible(!isFilterVisible)}\n  //           className=\"mb-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded origin-top-right \"\n  //         >\n  //           Filter\n  //         </button>\n  //         {isFilterVisible && (\n  //           <div className=\"absolute z-10 bg-white p-4 shadow-lg rounded\">\n  //             {allColumns.map((column) => (\n  //               <div key={column}>\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   checked={visibleColumns.includes(column)}\n  //                   onChange={() => toggleColumnVisibility(column)}\n  //                 />{\" \"}\n  //                 {column}\n  //               </div>\n  //             ))}\n  //           </div>\n  //         )}\n  //       </div>\n\n  //       <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n  //         {/* Table Header */}\n  //         <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n  //           <tr>\n  //             {allColumns\n  //               .filter((column) => visibleColumns.includes(column))\n  //               .map((column) => (\n  //                 <th key={column} scope=\"col\" className=\"py-3 px-6\">\n  //                   {column}\n  //                 </th>\n  //               ))}\n  //           </tr>\n  //         </thead>\n  //         {/* Table Body */}\n  //         <tbody>\n  //           {data.map((item, index) => (\n  //             <tr\n  //               key={index}\n  //               className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n  //             >\n  //               {allColumns\n  //                 .filter((column) => visibleColumns.includes(column))\n  //                 .map((column) => (\n  //                   <td key={column} className=\"py-4 px-6\">\n  //                     {item[column]}\n  //                   </td>\n  //                 ))}\n  //             </tr>\n  //           ))}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   </div>\n  // );\n\n  // return (\n  //   <div className=\"Users Table flex\">\n  //     <Sidebar />\n  //     <div className=\"flex-1 overflow-x-auto relative shadow-md sm:rounded-lg m-8\">\n  //       {/* Filter Button aligned to the right */}\n  //       <div className=\"flex justify-end mb-4\">\n  //         <button\n  //           onClick={() => setIsFilterVisible(!isFilterVisible)}\n  //           className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n  //         >\n  //           Filter\n  //         </button>\n  //         {isFilterVisible && (\n  //           <div\n  //             className=\"absolute z-10 bg-white p-4 shadow-lg rounded\"\n  //             style={{ minWidth: \"200px\", right: \"10px\" }} // Ensure dropdown does not shrink\n  //           >\n  //             {allColumns.map((column) => (\n  //               <div key={column} className=\"flex items-center\">\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   id={column}\n  //                   checked={visibleColumns.includes(column)}\n  //                   onChange={() => toggleColumnVisibility(column)}\n  //                 />\n  //                 <label htmlFor={column} className=\"ml-2\">\n  //                   {column}\n  //                 </label>\n  //               </div>\n  //             ))}\n  //           </div>\n  //         )}\n  //       </div>\n\n  //       <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n  //         {/* Table Header */}\n  //         <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n  //           <tr>\n  //             {allColumns\n  //               .filter((column) => visibleColumns.includes(column))\n  //               .map((column) => (\n  //                 <th key={column} scope=\"col\" className=\"py-3 px-6\">\n  //                   {column}\n  //                 </th>\n  //               ))}\n  //           </tr>\n  //         </thead>\n  //         {/* Table Body */}\n  //         <tbody>\n  //           {data.map((item, index) => (\n  //             <tr\n  //               key={index}\n  //               className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n  //             >\n  //               {allColumns\n  //                 .filter((column) => visibleColumns.includes(column))\n  //                 .map((column) => (\n  //                   <td key={column} className=\"py-4 px-6\">\n  //                     {item[column]}\n  //                   </td>\n  //                 ))}\n  //             </tr>\n  //           ))}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   </div>\n  // );\n\n  // return (\n  //   <div className=\"Users Table flex\">\n  //     <Sidebar />\n  //     <div className=\"flex-1 overflow-x-auto relative shadow-md sm:rounded-lg m-8\">\n  //       {/* Filter Button aligned to the right with dropdown */}\n  //       <div className=\"flex justify-end relative mb-4\">\n  //         <button\n  //           onClick={() => setIsFilterVisible(!isFilterVisible)}\n  //           className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n  //         >\n  //           Filter\n  //         </button>\n  //         {isFilterVisible && (\n  //           <div\n  //             className=\"origin-top-right absolute right-0 mt-2 bg-white p-4 shadow-lg rounded\"\n  //             style={{ minWidth: \"200px\" }}\n  //           >\n  //             {allColumns.map((column) => (\n  //               <div key={column} className=\"flex items-center\">\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   id={column}\n  //                   checked={visibleColumns.includes(column)}\n  //                   onChange={() => toggleColumnVisibility(column)}\n  //                 />\n  //                 <label htmlFor={column} className=\"ml-2\">\n  //                   {column}\n  //                 </label>\n  //               </div>\n  //             ))}\n  //           </div>\n  //         )}\n  //       </div>\n\n  //       <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n  //         {/* Table Header */}\n  //         <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n  //           <tr>\n  //             {visibleColumns.map((column) => (\n  //               <th key={column} scope=\"col\" className=\"py-3 px-6\">\n  //                 {column}\n  //               </th>\n  //             ))}\n  //           </tr>\n  //         </thead>\n  //         {/* Table Body */}\n  //         <tbody>\n  //           {data.map((item, index) => (\n  //             <tr\n  //               key={index}\n  //               className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n  //             >\n  //               {visibleColumns.map((column) => (\n  //                 <td key={column} className=\"py-4 px-6\">\n  //                   {item[column] ?? \"-\"}\n  //                 </td>\n  //               ))}\n  //             </tr>\n  //           ))}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   </div>\n  // );\n\n  return (\n    <div className=\"flex\">\n      <Sidebar />\n      <div className=\"flex-1 m-8\">\n        <div className=\"flex justify-between mb-4\">\n          <div className=\"flex justify-end w-full\">\n            <button\n              onClick={() => setIsFilterVisible(!isFilterVisible)}\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded relative\"\n            >\n              Filter\n            </button>\n            {isFilterVisible && (\n              <div className=\"absolute right-0 mt-12 bg-white p-4 shadow-lg rounded w-56\">\n                {allColumns.map((column) => (\n                  <div key={column} className=\"flex items-center mb-2\">\n                    <input\n                      type=\"checkbox\"\n                      id={column}\n                      checked={visibleColumns.includes(column)}\n                      onChange={() => toggleColumnVisibility(column)}\n                      className=\"mr-2\"\n                    />\n                    <label htmlFor={column}>{column}</label>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"overflow-x-auto relative shadow-md sm:rounded-lg\">\n          <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n              <tr>\n                {visibleColumns.map((column) => (\n                  <th key={column} scope=\"col\" className=\"py-3 px-6\">\n                    {column}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item, index) => (\n                <tr\n                  key={index}\n                  className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                >\n                  {visibleColumns.map((column) => (\n                    <td key={column} className=\"py-4 px-6\">\n                      {item[column] ?? \"-\"}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,uBAAuB;;AAE3C;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CACnD,OAAO,EACP,UAAU,EACV,SAAS,EACT,MAAM,EACN,KAAK,EACL,WAAW,EACX,iBAAiB,EACjB,UAAU,EACV,mBAAmB,EACnB;EACA;EAAA,CACD,CAAC;EAEF,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,UAAU,GAAG;EACjB;EACA,UAAU;EACV;EACA,MAAM,EACN,KAAK,EACL,WAAW,EACX,iBAAiB,EACjB,UAAU,EACV,mBAAmB,EACnB,cAAc,EACd,gBAAgB,EAChB,sBAAsB,EACtB,0BAA0B,EAC1B,eAAe,EACf,eAAe,EACf,OAAO,EACP,kBAAkB,EAClB,YAAY,EACZ,kBAAkB,EAClB,gBAAgB,EAChB,UAAU,EACV,cAAc;EACd;EACA,UAAU,EACV,YAAY,EACZ,qBAAqB,EACrB,wBAAwB,EACxB,wBAAwB,EACxB,aAAa,CACd;EAED,MAAMC,sBAAsB,GAAIC,MAAM,IAAK;IACzCL,iBAAiB,CAAEM,IAAI,IACrBA,IAAI,CAACC,QAAQ,CAACF,MAAM,CAAC,GACjBC,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,MAAM,CAAC,GAChC,CAAC,GAAGC,IAAI,EAAED,MAAM,CACtB,CAAC;EACH,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEACF,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C,CAAC,MAAM;UACL,MAAMjB,IAAI,GAAG,MAAMc,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCjB,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;UACfmB,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEpB,IAAI,CAAC;QAClD;MACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;E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"},"metadata":{},"sourceType":"module","externalDependencies":[]}