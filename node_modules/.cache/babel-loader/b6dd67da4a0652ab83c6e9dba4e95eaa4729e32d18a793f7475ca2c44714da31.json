{"ast":null,"code":"import { AuthenticationDetails, CognitoUser } from \"amazon-cognito-identity-js\";\nimport UserPool from \"./CognitoConfig\";\nconst authenticateUser = (username, password, newPassword) => {\n  return new Promise((resolve, reject) => {\n    const user = new CognitoUser({\n      Username: username,\n      Pool: UserPool\n    });\n    const authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password\n    });\n    user.authenticateUser(authDetails, {\n      onSuccess: data => resolve({\n        status: \"success\",\n        data\n      }),\n      onFailure: err => reject(err),\n      newPasswordRequired: (userAttributes, requiredAttributes) => {\n        // Delete the attribute that should not be modified\n        delete userAttributes.email; // or any other attributes that shouldn't be changed\n\n        if (!newPassword) {\n          resolve({\n            status: \"newPasswordRequired\",\n            user,\n            userAttributes,\n            requiredAttributes\n          });\n        } else {\n          // Set the new password for the user\n          user.completeNewPasswordChallenge(newPassword, userAttributes, {\n            onSuccess: data => resolve({\n              status: \"success\",\n              data\n            }),\n            onFailure: err => reject(err)\n          });\n        }\n      }\n    });\n  });\n};\nexport default authenticateUser;","map":{"version":3,"names":["AuthenticationDetails","CognitoUser","UserPool","authenticateUser","username","password","newPassword","Promise","resolve","reject","user","Username","Pool","authDetails","Password","onSuccess","data","status","onFailure","err","newPasswordRequired","userAttributes","requiredAttributes","email","completeNewPasswordChallenge"],"sources":["/Users/sachin_veera/Desktop/sample-react-app/src/authenticateUser.js"],"sourcesContent":["import { AuthenticationDetails, CognitoUser } from \"amazon-cognito-identity-js\";\nimport UserPool from \"./CognitoConfig\";\n\nconst authenticateUser = (username, password, newPassword) => {\n  return new Promise((resolve, reject) => {\n    const user = new CognitoUser({ Username: username, Pool: UserPool });\n    const authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n    });\n\n    user.authenticateUser(authDetails, {\n      onSuccess: (data) => resolve({ status: \"success\", data }),\n\n      onFailure: (err) => reject(err),\n\n      newPasswordRequired: (userAttributes, requiredAttributes) => {\n        // Delete the attribute that should not be modified\n        delete userAttributes.email; // or any other attributes that shouldn't be changed\n\n        if (!newPassword) {\n          resolve({\n            status: \"newPasswordRequired\",\n            user,\n            userAttributes,\n            requiredAttributes,\n          });\n        } else {\n          // Set the new password for the user\n          user.completeNewPasswordChallenge(newPassword, userAttributes, {\n            onSuccess: (data) => resolve({ status: \"success\", data }),\n            onFailure: (err) => reject(err),\n          });\n        }\n      },\n    });\n  });\n};\n\nexport default authenticateUser;\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,WAAW,QAAQ,4BAA4B;AAC/E,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,MAAMC,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,KAAK;EAC5D,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,IAAI,GAAG,IAAIT,WAAW,CAAC;MAAEU,QAAQ,EAAEP,QAAQ;MAAEQ,IAAI,EAAEV;IAAS,CAAC,CAAC;IACpE,MAAMW,WAAW,GAAG,IAAIb,qBAAqB,CAAC;MAC5CW,QAAQ,EAAEP,QAAQ;MAClBU,QAAQ,EAAET;IACZ,CAAC,CAAC;IAEFK,IAAI,CAACP,gBAAgB,CAACU,WAAW,EAAE;MACjCE,SAAS,EAAGC,IAAI,IAAKR,OAAO,CAAC;QAAES,MAAM,EAAE,SAAS;QAAED;MAAK,CAAC,CAAC;MAEzDE,SAAS,EAAGC,GAAG,IAAKV,MAAM,CAACU,GAAG,CAAC;MAE/BC,mBAAmB,EAAEA,CAACC,cAAc,EAAEC,kBAAkB,KAAK;QAC3D;QACA,OAAOD,cAAc,CAACE,KAAK,CAAC,CAAC;;QAE7B,IAAI,CAACjB,WAAW,EAAE;UAChBE,OAAO,CAAC;YACNS,MAAM,EAAE,qBAAqB;YAC7BP,IAAI;YACJW,cAAc;YACdC;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACL;UACAZ,IAAI,CAACc,4BAA4B,CAAClB,WAAW,EAAEe,cAAc,EAAE;YAC7DN,SAAS,EAAGC,IAAI,IAAKR,OAAO,CAAC;cAAES,MAAM,EAAE,SAAS;cAAED;YAAK,CAAC,CAAC;YACzDE,SAAS,EAAGC,GAAG,IAAKV,MAAM,CAACU,GAAG;UAChC,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,eAAehB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}