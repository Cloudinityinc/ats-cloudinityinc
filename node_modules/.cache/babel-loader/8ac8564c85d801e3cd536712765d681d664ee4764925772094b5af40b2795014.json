{"ast":null,"code":"var _jsxFileName = \"/Users/sachin_veera/Desktop/sample-react-app/src/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import authenticateUser from \"./authenticateUser\";\n\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n//   const handleSignIn = async (event) => {\n//     event.preventDefault();\n//     setError(\"\"); // Clearing any existing error messages\n\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n\n//       if (response.status === \"newPasswordRequired\") {\n//         // Save the user object and ask for a new password\n//         setIsChangingPassword(true);\n//       } else if (response.status === \"success\") {\n//         console.log(\"Login successful!\", response.data);\n//         // Handle successful login, like redirecting to a dashboard\n//       }\n//     } catch (err) {\n//       setError(err.message); // Setting error if there's an actual error\n//     }\n//   };\n\n//   const handleNewPasswordSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n//       if (response.status === \"success\") {\n//         console.log(\"Password change and login successful!\", response.data);\n//         // Handle successful password change and login\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!isChangingPassword ? (\n//         // Regular login form\n//         <form onSubmit={handleSignIn}>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             placeholder=\"Username\"\n//           />\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"Password\"\n//           />\n//           <button type=\"submit\">Login</button>\n//         </form>\n//       ) : (\n//         // New password form\n//         <form onSubmit={handleNewPasswordSubmit}>\n//           <input\n//             type=\"password\"\n//             value={newPassword}\n//             onChange={(e) => setNewPassword(e.target.value)}\n//             placeholder=\"New Password\"\n//           />\n//           <button type=\"submit\">Set New Password</button>\n//         </form>\n//       )}\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport authenticateUser from \"./authenticateUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n  const history = useHistory();\n  const handleSignIn = async event => {\n    event.preventDefault();\n    setError(\"\"); // Clear any existing error messages\n\n    try {\n      const response = await authenticateUser(username, password, newPassword);\n      if (response.status === \"newPasswordRequired\") {\n        // Save the user object and ask for a new password\n        setIsChangingPassword(true);\n      } else if (response.status === \"success\") {\n        console.log(\"Login successful!\", response.data);\n        history.push(\"/success\"); // Redirect on successful login\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleNewPasswordSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await authenticateUser(username, password, newPassword);\n      if (response.status === \"success\") {\n        console.log(\"Password change and login successful!\", response.data);\n        history.push(\"/success\"); // Redirect on successful password change and login\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isChangingPassword ?\n    /*#__PURE__*/\n    // Regular login form\n    _jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // New password form\n    _jsxDEV(\"form\", {\n      onSubmit: handleNewPasswordSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        placeholder: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"uJ8eLock0o9cSlC/gWLfU94T2MU=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","authenticateUser","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","newPassword","setNewPassword","error","setError","isChangingPassword","setIsChangingPassword","history","handleSignIn","event","preventDefault","response","status","console","log","data","push","err","message","handleNewPasswordSubmit","children","onSubmit","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/sachin_veera/Desktop/sample-react-app/src/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import authenticateUser from \"./authenticateUser\";\n\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n//   const handleSignIn = async (event) => {\n//     event.preventDefault();\n//     setError(\"\"); // Clearing any existing error messages\n\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n\n//       if (response.status === \"newPasswordRequired\") {\n//         // Save the user object and ask for a new password\n//         setIsChangingPassword(true);\n//       } else if (response.status === \"success\") {\n//         console.log(\"Login successful!\", response.data);\n//         // Handle successful login, like redirecting to a dashboard\n//       }\n//     } catch (err) {\n//       setError(err.message); // Setting error if there's an actual error\n//     }\n//   };\n\n//   const handleNewPasswordSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n//       if (response.status === \"success\") {\n//         console.log(\"Password change and login successful!\", response.data);\n//         // Handle successful password change and login\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!isChangingPassword ? (\n//         // Regular login form\n//         <form onSubmit={handleSignIn}>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             placeholder=\"Username\"\n//           />\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"Password\"\n//           />\n//           <button type=\"submit\">Login</button>\n//         </form>\n//       ) : (\n//         // New password form\n//         <form onSubmit={handleNewPasswordSubmit}>\n//           <input\n//             type=\"password\"\n//             value={newPassword}\n//             onChange={(e) => setNewPassword(e.target.value)}\n//             placeholder=\"New Password\"\n//           />\n//           <button type=\"submit\">Set New Password</button>\n//         </form>\n//       )}\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport authenticateUser from \"./authenticateUser\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n  const history = useHistory();\n\n  const handleSignIn = async (event) => {\n    event.preventDefault();\n    setError(\"\"); // Clear any existing error messages\n\n    try {\n      const response = await authenticateUser(username, password, newPassword);\n\n      if (response.status === \"newPasswordRequired\") {\n        // Save the user object and ask for a new password\n        setIsChangingPassword(true);\n      } else if (response.status === \"success\") {\n        console.log(\"Login successful!\", response.data);\n        history.push(\"/success\"); // Redirect on successful login\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleNewPasswordSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await authenticateUser(username, password, newPassword);\n      if (response.status === \"success\") {\n        console.log(\"Password change and login successful!\", response.data);\n        history.push(\"/success\"); // Redirect on successful password change and login\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {!isChangingPassword ? (\n        // Regular login form\n        <form onSubmit={handleSignIn}>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Username\"\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      ) : (\n        // New password form\n        <form onSubmit={handleNewPasswordSubmit}>\n          <input\n            type=\"password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            placeholder=\"New Password\"\n          />\n          <button type=\"submit\">Set New Password</button>\n        </form>\n      )}\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}