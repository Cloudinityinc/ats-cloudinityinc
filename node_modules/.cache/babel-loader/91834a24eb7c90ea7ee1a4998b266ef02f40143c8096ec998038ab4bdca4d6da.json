{"ast":null,"code":"var _jsxFileName = \"/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/SuccessPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const SuccessPage = () => {\n//   const [formData, setFormData] = useState({\n//     FullName: \"\",\n//     RequiredID: \"\",\n//     RequiredTitle: \"\",\n//     Role: \"\",\n//     RequiredCreationDate: \"\",\n//     VendorID: \"\",\n//     ImmigrationStatus: \"\",\n//     ContractType: \"\",\n//     SubmissionDate: \"\",\n//     RequiredSubmissionEndDate: \"\",\n//     CandidateCurrentLocation: \"\",\n//     ContactNumber: \"\",\n//     RecruiterName: \"\",\n//     State: \"\",\n//     SubmissionStatus: \"\",\n//     VendorRate: \"\",\n//     CandidatePayRate: \"\",\n//     BillRateMargin: \"\",\n//     ResumeSource: \"\",\n//     EmailId: \"\",\n//     LinkedInID: \"\",\n//     EmployerInformation: \"\",\n//     ProfessionalReferences: \"\",\n//     DOB: \"\",\n//     RequiredSkills: \"\",\n//     ResumeFormatingNeeded: \"\",\n//     FormatedBy: \"\",\n//     Password: \"\",\n//     PasswordConfirmation: \"\",\n//     Resume: null,\n//   });\n//   const [validationErrors, setValidationErrors] = useState({});\n//   const [showPopup, setShowPopup] = useState(false);\n//   const [uploadError, setUploadError] = useState(\"\");\n\n//   const handleInputChange = (e) => {\n//     const { id, value, files } = e.target;\n//     if (id === \"Resume\") {\n//       const file = files ? files[0] : null;\n//       if (file) {\n//         const allowedTypes = [\n//           \"application/pdf\",\n//           \"application/msword\",\n//           \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n//         ];\n//         if (!allowedTypes.includes(file.type) || file.size > 10 * 1024 * 1024) {\n//           setUploadError(\"Only PDF or DOC files under 10MB are allowed.\");\n//           return;\n//         }\n//         setFormData({ ...formData, Resume: file });\n//         setValidationErrors({ ...validationErrors, Resume: \"\" });\n//       }\n//     } else {\n//       setFormData({ ...formData, [id]: value });\n//       // Remove any existing error for this field\n//       const newErrors = { ...validationErrors };\n//       delete newErrors[id];\n//       setValidationErrors(newErrors);\n//     }\n//   };\n\n//   const validateForm = () => {\n//     const newErrors = {};\n//     Object.keys(formData).forEach((key) => {\n//       // Skip validation for Resume here, since it's handled separately\n//       if (!formData[key] && key !== \"Resume\") {\n//         newErrors[key] = \"This field is required.\";\n//       }\n//     });\n//     if (!formData.Resume) {\n//       newErrors.Resume = \"Please upload a resume.\";\n//     }\n//     setValidationErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (validateForm()) {\n//       // Form is valid\n//       console.log(\"Form Data Submitted:\", formData);\n//       setShowPopup(true);\n//       // Here you would typically send formData to your server\n//       // console.log(formData);\n//     }\n//   };\n\n//   const handleClosePopup = () => {\n//     setShowPopup(false);\n//   };\n\n//   return (\n//     <div>\n//       <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n//         <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n//           Employee Information Form\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n//             {Object.keys(formData)\n//               .filter((key) => key !== \"Resume\")\n//               .map((key) => (\n//                 <div className=\"mb-4\" key={key}>\n//                   <label\n//                     htmlFor={key}\n//                     className=\"text-white dark:text-gray-200 block text-sm font-bold mb-2\"\n//                   >\n//                     {key.replace(/([A-Z])/g, \" $1\").trim()}\n//                   </label>\n//                   <input\n//                     id={key}\n//                     type={key === \"EmailId\" ? \"email\" : \"text\"}\n//                     value={formData[key]}\n//                     onChange={handleInputChange}\n//                     className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                     placeholder={`Enter ${key}`}\n//                   />\n//                   {validationErrors[key] && (\n//                     <p className=\"text-red-500 text-xs italic\">\n//                       {validationErrors[key]}\n//                     </p>\n//                   )}\n//                 </div>\n//               ))}\n//             <div className=\"mb-4\">\n//               <label className=\"block text-sm font-medium text-white\">\n//                 Resume\n//               </label>\n//               <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n//                 <div className=\"space-y-1 text-center\">\n//                   <svg\n//                     className=\"mx-auto h-12 w-12 text-white\"\n//                     stroke=\"currentColor\"\n//                     fill=\"none\"\n//                     viewBox=\"0 0 48 48\"\n//                     aria-hidden=\"true\"\n//                   >\n//                     <path\n//                       d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n//                       strokeWidth=\"2\"\n//                       strokeLinecap=\"round\"\n//                       strokeLinejoin=\"round\"\n//                     />\n//                   </svg>\n//                   <div className=\"flex text-sm text-gray-600\">\n//                     <label\n//                       htmlFor=\"file-upload\"\n//                       className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n//                     >\n//                       <span>Upload a file</span>\n//                       <input\n//                         id=\"file-upload\"\n//                         name=\"file-upload\"\n//                         type=\"file\"\n//                         className=\"sr-only\"\n//                         onChange={handleInputChange}\n//                       />\n//                     </label>\n//                     <p className=\"pl-1 text-white\">or drag and drop</p>\n//                   </div>\n//                   <p className=\"text-xs text-white\">PDF, DOC up to 10MB</p>\n//                   {uploadError && (\n//                     <p className=\"text-red-500 mt-1\">{uploadError}</p>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n\n//             <button\n//               type=\"submit\"\n//               className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//             >\n//               Submit\n//             </button>\n//           </div>\n//         </form>\n//       </section>\n//       {showPopup && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n//           <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n//             <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n//             <p>Your form has been submitted successfully.</p>\n//             <button\n//               onClick={handleClosePopup}\n//               className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Close\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SuccessPage;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuccessPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    FullName: \"\",\n    RequiredID: \"\",\n    RequiredTitle: \"\",\n    Role: \"\",\n    RequiredCreationDate: \"\",\n    VendorID: \"\",\n    ImmigrationStatus: \"\",\n    ContractType: \"\",\n    SubmissionDate: \"\",\n    RequiredSubmissionEndDate: \"\",\n    CandidateCurrentLocation: \"\",\n    ContactNumber: \"\",\n    RecruiterName: \"\",\n    State: \"\",\n    SubmissionStatus: \"\",\n    VendorRate: \"\",\n    CandidatePayRate: \"\",\n    BillRateMargin: \"\",\n    ResumeSource: \"\",\n    EmailId: \"\",\n    LinkedInID: \"\",\n    EmployerInformation: \"\",\n    ProfessionalReferences: \"\",\n    DOB: \"\",\n    RequiredSkills: \"\",\n    ResumeFormatingNeeded: \"\",\n    FormatedBy: \"\",\n    Password: \"\",\n    PasswordConfirmation: \"\",\n    Resume: null\n  });\n  const [showPopup, setShowPopup] = useState(false);\n  const [uploadError, setUploadError] = useState(\"\");\n  const handleInputChange = e => {\n    const {\n      id,\n      value,\n      files\n    } = e.target;\n    if (id === \"Resume\") {\n      const file = files ? files[0] : null;\n      if (file) {\n        const allowedTypes = [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n        if (!allowedTypes.includes(file.type) || file.size > 10 * 1024 * 1024) {\n          // Set error if file is not PDF/DOC or larger than 10MB\n          setUploadError(\"Only PDF or DOC files under 10MB are allowed.\");\n          return;\n        }\n        // Update form data and clear any error if file is valid\n        setFormData({\n          ...formData,\n          Resume: file\n        });\n        setUploadError(\"\");\n      }\n    } else {\n      setFormData({\n        ...formData,\n        [id]: value\n      });\n    }\n  };\n  const validateForm = () => {\n    // Form validation logic here (omitted for brevity)\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (validateForm()) {\n      // If form is valid, proceed with submission logic\n      console.log(\"Form Data Submitted:\", formData);\n      setShowPopup(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold text-white capitalize dark:text-white\",\n        children: \"Employee Information Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-white\",\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1 text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"mx-auto h-12 w-12 text-white\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex text-sm text-gray-600\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"file-upload\",\n                    className: \"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Upload a file\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"file-upload\",\n                      name: \"file-upload\",\n                      type: \"file\",\n                      className: \"sr-only\",\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"pl-1 text-white\",\n                    children: \"or drag and drop\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-white\",\n                  children: \"PDF, DOC up to 10MB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), uploadError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-red-500 mt-1\",\n                  children: uploadError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-4\",\n          children: \"Submission Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your form has been submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClosePopup,\n          className: \"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s(SuccessPage, \"AkqxcTT/FCcCGU2p9OA09z5MsCA=\");\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SuccessPage","_s","formData","setFormData","FullName","RequiredID","RequiredTitle","Role","RequiredCreationDate","VendorID","ImmigrationStatus","ContractType","SubmissionDate","RequiredSubmissionEndDate","CandidateCurrentLocation","ContactNumber","RecruiterName","State","SubmissionStatus","VendorRate","CandidatePayRate","BillRateMargin","ResumeSource","EmailId","LinkedInID","EmployerInformation","ProfessionalReferences","DOB","RequiredSkills","ResumeFormatingNeeded","FormatedBy","Password","PasswordConfirmation","Resume","showPopup","setShowPopup","uploadError","setUploadError","handleInputChange","e","id","value","files","target","file","allowedTypes","includes","type","size","validateForm","handleSubmit","event","preventDefault","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fill","viewBox","stroke","htmlFor","name","onChange","onClick","handleClosePopup","_c","$RefreshReg$"],"sources":["/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/SuccessPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// const SuccessPage = () => {\n//   const [formData, setFormData] = useState({\n//     FullName: \"\",\n//     RequiredID: \"\",\n//     RequiredTitle: \"\",\n//     Role: \"\",\n//     RequiredCreationDate: \"\",\n//     VendorID: \"\",\n//     ImmigrationStatus: \"\",\n//     ContractType: \"\",\n//     SubmissionDate: \"\",\n//     RequiredSubmissionEndDate: \"\",\n//     CandidateCurrentLocation: \"\",\n//     ContactNumber: \"\",\n//     RecruiterName: \"\",\n//     State: \"\",\n//     SubmissionStatus: \"\",\n//     VendorRate: \"\",\n//     CandidatePayRate: \"\",\n//     BillRateMargin: \"\",\n//     ResumeSource: \"\",\n//     EmailId: \"\",\n//     LinkedInID: \"\",\n//     EmployerInformation: \"\",\n//     ProfessionalReferences: \"\",\n//     DOB: \"\",\n//     RequiredSkills: \"\",\n//     ResumeFormatingNeeded: \"\",\n//     FormatedBy: \"\",\n//     Password: \"\",\n//     PasswordConfirmation: \"\",\n//     Resume: null,\n//   });\n//   const [validationErrors, setValidationErrors] = useState({});\n//   const [showPopup, setShowPopup] = useState(false);\n//   const [uploadError, setUploadError] = useState(\"\");\n\n//   const handleInputChange = (e) => {\n//     const { id, value, files } = e.target;\n//     if (id === \"Resume\") {\n//       const file = files ? files[0] : null;\n//       if (file) {\n//         const allowedTypes = [\n//           \"application/pdf\",\n//           \"application/msword\",\n//           \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n//         ];\n//         if (!allowedTypes.includes(file.type) || file.size > 10 * 1024 * 1024) {\n//           setUploadError(\"Only PDF or DOC files under 10MB are allowed.\");\n//           return;\n//         }\n//         setFormData({ ...formData, Resume: file });\n//         setValidationErrors({ ...validationErrors, Resume: \"\" });\n//       }\n//     } else {\n//       setFormData({ ...formData, [id]: value });\n//       // Remove any existing error for this field\n//       const newErrors = { ...validationErrors };\n//       delete newErrors[id];\n//       setValidationErrors(newErrors);\n//     }\n//   };\n\n//   const validateForm = () => {\n//     const newErrors = {};\n//     Object.keys(formData).forEach((key) => {\n//       // Skip validation for Resume here, since it's handled separately\n//       if (!formData[key] && key !== \"Resume\") {\n//         newErrors[key] = \"This field is required.\";\n//       }\n//     });\n//     if (!formData.Resume) {\n//       newErrors.Resume = \"Please upload a resume.\";\n//     }\n//     setValidationErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (validateForm()) {\n//       // Form is valid\n//       console.log(\"Form Data Submitted:\", formData);\n//       setShowPopup(true);\n//       // Here you would typically send formData to your server\n//       // console.log(formData);\n//     }\n//   };\n\n//   const handleClosePopup = () => {\n//     setShowPopup(false);\n//   };\n\n//   return (\n//     <div>\n//       <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n//         <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n//           Employee Information Form\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n//             {Object.keys(formData)\n//               .filter((key) => key !== \"Resume\")\n//               .map((key) => (\n//                 <div className=\"mb-4\" key={key}>\n//                   <label\n//                     htmlFor={key}\n//                     className=\"text-white dark:text-gray-200 block text-sm font-bold mb-2\"\n//                   >\n//                     {key.replace(/([A-Z])/g, \" $1\").trim()}\n//                   </label>\n//                   <input\n//                     id={key}\n//                     type={key === \"EmailId\" ? \"email\" : \"text\"}\n//                     value={formData[key]}\n//                     onChange={handleInputChange}\n//                     className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                     placeholder={`Enter ${key}`}\n//                   />\n//                   {validationErrors[key] && (\n//                     <p className=\"text-red-500 text-xs italic\">\n//                       {validationErrors[key]}\n//                     </p>\n//                   )}\n//                 </div>\n//               ))}\n//             <div className=\"mb-4\">\n//               <label className=\"block text-sm font-medium text-white\">\n//                 Resume\n//               </label>\n//               <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n//                 <div className=\"space-y-1 text-center\">\n//                   <svg\n//                     className=\"mx-auto h-12 w-12 text-white\"\n//                     stroke=\"currentColor\"\n//                     fill=\"none\"\n//                     viewBox=\"0 0 48 48\"\n//                     aria-hidden=\"true\"\n//                   >\n//                     <path\n//                       d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n//                       strokeWidth=\"2\"\n//                       strokeLinecap=\"round\"\n//                       strokeLinejoin=\"round\"\n//                     />\n//                   </svg>\n//                   <div className=\"flex text-sm text-gray-600\">\n//                     <label\n//                       htmlFor=\"file-upload\"\n//                       className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n//                     >\n//                       <span>Upload a file</span>\n//                       <input\n//                         id=\"file-upload\"\n//                         name=\"file-upload\"\n//                         type=\"file\"\n//                         className=\"sr-only\"\n//                         onChange={handleInputChange}\n//                       />\n//                     </label>\n//                     <p className=\"pl-1 text-white\">or drag and drop</p>\n//                   </div>\n//                   <p className=\"text-xs text-white\">PDF, DOC up to 10MB</p>\n//                   {uploadError && (\n//                     <p className=\"text-red-500 mt-1\">{uploadError}</p>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n\n//             <button\n//               type=\"submit\"\n//               className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//             >\n//               Submit\n//             </button>\n//           </div>\n//         </form>\n//       </section>\n//       {showPopup && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n//           <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n//             <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n//             <p>Your form has been submitted successfully.</p>\n//             <button\n//               onClick={handleClosePopup}\n//               className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Close\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SuccessPage;\n\nimport React, { useState } from \"react\";\n\nconst SuccessPage = () => {\n  const [formData, setFormData] = useState({\n    FullName: \"\",\n    RequiredID: \"\",\n    RequiredTitle: \"\",\n    Role: \"\",\n    RequiredCreationDate: \"\",\n    VendorID: \"\",\n    ImmigrationStatus: \"\",\n    ContractType: \"\",\n    SubmissionDate: \"\",\n    RequiredSubmissionEndDate: \"\",\n    CandidateCurrentLocation: \"\",\n    ContactNumber: \"\",\n    RecruiterName: \"\",\n    State: \"\",\n    SubmissionStatus: \"\",\n    VendorRate: \"\",\n    CandidatePayRate: \"\",\n    BillRateMargin: \"\",\n    ResumeSource: \"\",\n    EmailId: \"\",\n    LinkedInID: \"\",\n    EmployerInformation: \"\",\n    ProfessionalReferences: \"\",\n    DOB: \"\",\n    RequiredSkills: \"\",\n    ResumeFormatingNeeded: \"\",\n    FormatedBy: \"\",\n    Password: \"\",\n    PasswordConfirmation: \"\",\n    Resume: null,\n  });\n  const [showPopup, setShowPopup] = useState(false);\n  const [uploadError, setUploadError] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { id, value, files } = e.target;\n    if (id === \"Resume\") {\n      const file = files ? files[0] : null;\n      if (file) {\n        const allowedTypes = [\n          \"application/pdf\",\n          \"application/msword\",\n          \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        ];\n        if (!allowedTypes.includes(file.type) || file.size > 10 * 1024 * 1024) {\n          // Set error if file is not PDF/DOC or larger than 10MB\n          setUploadError(\"Only PDF or DOC files under 10MB are allowed.\");\n          return;\n        }\n        // Update form data and clear any error if file is valid\n        setFormData({ ...formData, Resume: file });\n        setUploadError(\"\");\n      }\n    } else {\n      setFormData({ ...formData, [id]: value });\n    }\n  };\n\n  const validateForm = () => {\n    // Form validation logic here (omitted for brevity)\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      // If form is valid, proceed with submission logic\n      console.log(\"Form Data Submitted:\", formData);\n      setShowPopup(true);\n    }\n  };\n\n  return (\n    <div>\n      <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n        <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n          Employee Information Form\n        </h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n            {/* Form fields (omitted for brevity) */}\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-white\">\n                Resume\n              </label>\n              <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                <div className=\"space-y-1 text-center\">\n                  {/* SVG icon and file input UI */}\n                  <svg\n                    className=\"mx-auto h-12 w-12 text-white\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    {/* SVG path (omitted for brevity) */}\n                  </svg>\n                  <div className=\"flex text-sm text-gray-600\">\n                    <label\n                      htmlFor=\"file-upload\"\n                      className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                    >\n                      <span>Upload a file</span>\n                      <input\n                        id=\"file-upload\"\n                        name=\"file-upload\"\n                        type=\"file\"\n                        className=\"sr-only\"\n                        onChange={handleInputChange}\n                      />\n                    </label>\n                    <p className=\"pl-1 text-white\">or drag and drop</p>\n                  </div>\n                  <p className=\"text-xs text-white\">PDF, DOC up to 10MB</p>\n                  {uploadError && (\n                    <p className=\"text-red-500 mt-1\">{uploadError}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </section>\n      {showPopup && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n          <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n            <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n            <p>Your form has been submitted successfully.</p>\n            <button\n              onClick={handleClosePopup}\n              className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SuccessPage;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}