{"ast":null,"code":"// import { AuthenticationDetails, CognitoUser } from \"amazon-cognito-identity-js\";\n// import UserPool from \"./CognitoConfig\";\n\n// const authenticateUser = (username, password, newPassword) => {\n//   return new Promise((resolve, reject) => {\n//     const user = new CognitoUser({ Username: username, Pool: UserPool });\n//     const authDetails = new AuthenticationDetails({\n//       Username: username,\n//       Password: password,\n//     });\n\n//     user.authenticateUser(authDetails, {\n//       onSuccess: (data) => resolve({ status: \"success\", data }),\n\n//       onFailure: (err) => reject(err),\n\n//       newPasswordRequired: (userAttributes, requiredAttributes) => {\n//         // If newPassword is not provided, resolve with a specific status\n//         if (!newPassword) {\n//           resolve({\n//             status: \"newPasswordRequired\",\n//             user,\n//             userAttributes,\n//             requiredAttributes,\n//           });\n//         } else {\n//           // Ensure non-modifiable attributes are not sent back\n//           delete userAttributes.email_verified;\n//           // Add other attributes to delete if necessary\n\n//           // Complete the new password challenge\n//           user.completeNewPasswordChallenge(newPassword, userAttributes, {\n//             onSuccess: (data) => resolve({ status: \"success\", data }),\n//             onFailure: (err) => reject(err),\n//           });\n//         }\n//       },\n//     });\n//   });\n// };\n\n// export default authenticateUser;","map":{"version":3,"names":[],"sources":["/Users/sachin_veera/Desktop/sample-react-app/src/authenticateUser.js"],"sourcesContent":["// import { AuthenticationDetails, CognitoUser } from \"amazon-cognito-identity-js\";\n// import UserPool from \"./CognitoConfig\";\n\n// const authenticateUser = (username, password, newPassword) => {\n//   return new Promise((resolve, reject) => {\n//     const user = new CognitoUser({ Username: username, Pool: UserPool });\n//     const authDetails = new AuthenticationDetails({\n//       Username: username,\n//       Password: password,\n//     });\n\n//     user.authenticateUser(authDetails, {\n//       onSuccess: (data) => resolve({ status: \"success\", data }),\n\n//       onFailure: (err) => reject(err),\n\n//       newPasswordRequired: (userAttributes, requiredAttributes) => {\n//         // If newPassword is not provided, resolve with a specific status\n//         if (!newPassword) {\n//           resolve({\n//             status: \"newPasswordRequired\",\n//             user,\n//             userAttributes,\n//             requiredAttributes,\n//           });\n//         } else {\n//           // Ensure non-modifiable attributes are not sent back\n//           delete userAttributes.email_verified;\n//           // Add other attributes to delete if necessary\n\n//           // Complete the new password challenge\n//           user.completeNewPasswordChallenge(newPassword, userAttributes, {\n//             onSuccess: (data) => resolve({ status: \"success\", data }),\n//             onFailure: (err) => reject(err),\n//           });\n//         }\n//       },\n//     });\n//   });\n// };\n\n// export default authenticateUser;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}