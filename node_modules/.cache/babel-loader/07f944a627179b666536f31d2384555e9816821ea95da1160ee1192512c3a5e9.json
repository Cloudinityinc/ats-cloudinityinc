{"ast":null,"code":"// src/services/cognitoService.js\n\nimport { CognitoUserPool, CognitoUserAttribute } from \"amazon-cognito-identity-js\";\nconst poolData = {\n  UserPoolId: \"us-east-2_3Ms1eFrei\",\n  // Replace with your Cognito User Pool ID\n  ClientId: \"12gd95t82qp31uf8a5vgo0fkmb\" // Replace with your Cognito App Client ID\n};\nconst userPool = new CognitoUserPool(poolData);\nexport const registerUser = async (username, password) => {\n  const attributeList = [];\n\n  // Add additional attributes as needed\n  // Example: Adding email as an attribute\n  const emailAttribute = {\n    Name: \"email\",\n    Value: username // Assuming the username is the email\n  };\n  attributeList.push(new CognitoUserAttribute(emailAttribute));\n  return new Promise((resolve, reject) => {\n    userPool.signUp(username, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};","map":{"version":3,"names":["CognitoUserPool","CognitoUserAttribute","poolData","UserPoolId","ClientId","userPool","registerUser","username","password","attributeList","emailAttribute","Name","Value","push","Promise","resolve","reject","signUp","err","result"],"sources":["/Users/sachin_veera/Desktop/ats-cloudinityinc/src/services/cognitoService.js"],"sourcesContent":["// src/services/cognitoService.js\n\nimport {\n  CognitoUserPool,\n  CognitoUserAttribute,\n} from \"amazon-cognito-identity-js\";\n\nconst poolData = {\n  UserPoolId: \"us-east-2_3Ms1eFrei\", // Replace with your Cognito User Pool ID\n  ClientId: \"12gd95t82qp31uf8a5vgo0fkmb\", // Replace with your Cognito App Client ID\n};\n\nconst userPool = new CognitoUserPool(poolData);\n\nexport const registerUser = async (username, password) => {\n  const attributeList = [];\n\n  // Add additional attributes as needed\n  // Example: Adding email as an attribute\n  const emailAttribute = {\n    Name: \"email\",\n    Value: username, // Assuming the username is the email\n  };\n  attributeList.push(new CognitoUserAttribute(emailAttribute));\n\n  return new Promise((resolve, reject) => {\n    userPool.signUp(username, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n"],"mappings":"AAAA;;AAEA,SACEA,eAAe,EACfC,oBAAoB,QACf,4BAA4B;AAEnC,MAAMC,QAAQ,GAAG;EACfC,UAAU,EAAE,qBAAqB;EAAE;EACnCC,QAAQ,EAAE,4BAA4B,CAAE;AAC1C,CAAC;AAED,MAAMC,QAAQ,GAAG,IAAIL,eAAe,CAACE,QAAQ,CAAC;AAE9C,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,MAAMC,aAAa,GAAG,EAAE;;EAExB;EACA;EACA,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAEL,QAAQ,CAAE;EACnB,CAAC;EACDE,aAAa,CAACI,IAAI,CAAC,IAAIZ,oBAAoB,CAACS,cAAc,CAAC,CAAC;EAE5D,OAAO,IAAII,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCX,QAAQ,CAACY,MAAM,CAACV,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAE,IAAI,EAAE,CAACS,GAAG,EAAEC,MAAM,KAAK;MACxE,IAAID,GAAG,EAAE;QACPF,MAAM,CAACE,GAAG,CAAC;MACb,CAAC,MAAM;QACLH,OAAO,CAACI,MAAM,CAAC;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}