{"ast":null,"code":"var _jsxFileName = \"/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/SuccessPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SuccessPage() {\n  _s();\n  const initialFormData = {\n    FullName: \"\",\n    // RequiredID: \"\",\n    ReqId: \"\",\n    ReqTitle: \"\",\n    Role: \"\",\n    ReqCreationDate: \"\",\n    VendorID: \"\",\n    ImmigrationStatus: \"\",\n    ContractType: \"\",\n    SubmissionDate: \"\",\n    ReqSubmissionEndDate: \"\",\n    CandidateCurrentLocation: \"\",\n    ContactNumber: \"\",\n    RecruiterName: \"\",\n    State: \"\",\n    SubmissionStatus: \"\",\n    VendorRate: \"\",\n    CandidatePayRate: \"\",\n    BillRateMargin: \"\",\n    BillRate: \"\",\n    ResumeSource: \"\",\n    EmailId: \"\",\n    LinkedInID: \"\",\n    EmployerInformation: \"\",\n    ProfessionalReferences: \"\",\n    DOB: \"\",\n    ReqSkills: \"\",\n    ResumeFormattingNeeded: \"\",\n    FormattedBy: \"\",\n    Resume: null // Placeholder for the resume fileßƒ\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const resumeInputRef = useRef(null);\n  const recruiterName = process.env.REACT_APP_RECRUITER_NAME.split(\",\");\n  const [selectedRecruiterName, setSelectedRecruiterName] = useState(\"\");\n  const recruitingStatus = process.env.REACT_APP_RECRUITING_STATUS.split(\",\");\n  const [selectRecruitingStatus, setSelectRecruitingStatus] = useState(\"\");\n  const immigrationStatus = process.env.REACT_APP_IMMIGRATION_STATUS.split(\",\");\n  const [selectImmigrationStatus, setSelectImmigrationStatus] = useState(\"\");\n  const contractType = process.env.REACT_APP_CONTRACT_TYPE.split(\",\");\n  const [selectContractType, setSelectContractType] = useState(\"\");\n  const stateName = process.env.REACT_APP_STATE_NAME.split(\",\");\n  const [selectStateName, setSelectStateName] = useState(\"\");\n  const questionnaire = process.env.REACT_APP_QUESTIONNAIRE.split(\",\");\n  const [selectQuestionnaire, setSelectQuestionnaire] = useState(\"\");\n  const submissionStatus = process.env.REACT_APP_SUBMISSION_STATUS.split(\",\");\n  const [selectSubmissionStatus, setSelectSubmissionStatus] = useState(\"\");\n  const [isImmigrationStatusDropdownOpen, setIsImmigrationStatusDropdownOpen] = useState(false);\n  useEffect(() => {\n    const handleOutsideClick = event => {\n      if (!event.target.closest(\"#dropdownHoverContainer\")) {\n        setIsImmigrationStatusDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => document.removeEventListener(\"click\", handleOutsideClick);\n  }, []);\n  const isValidEmail = email => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n  const handleInputChange = e => {\n    const {\n      id,\n      value,\n      files\n    } = e.target;\n    if (id === \"Resume\" && files) {\n      const file = files[0];\n      if (file) {\n        const allowedTypes = [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n        if (!allowedTypes.includes(file.type) || file.size > 1024 * 1024 * 10) {\n          setValidationErrors({\n            ...validationErrors,\n            Resume: \"Only PDF or DOC files under 10MB are allowed.\"\n          });\n        } else {\n          setFormData({\n            ...formData,\n            Resume: file\n          });\n          let newErrors = {\n            ...validationErrors\n          };\n          delete newErrors.Resume;\n          setValidationErrors(newErrors);\n        }\n      }\n    } else {\n      setFormData({\n        ...formData,\n        [id]: value\n      });\n      let newErrors = {\n        ...validationErrors\n      };\n      delete newErrors[id];\n      setValidationErrors(newErrors);\n    }\n  };\n\n  // const validateForm = () => {\n  //   let isValid = true;\n  //   const newErrors = {};\n  //   Object.keys(formData).forEach((key) => {\n  //     if (!formData[key] && key !== \"Resume\") {\n  //       newErrors[key] = \"This field is required.\";\n  //       isValid = false;\n  //     }\n  //   });\n  //   if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n  //     newErrors.EmailId = \"Invalid email format.\";\n  //     isValid = false;\n  //   }\n\n  //   if (!formData.Resume) {\n  //     newErrors.Resume = \"Please upload a resume.\";\n  //     isValid = false;\n  //   }\n\n  //   setValidationErrors(newErrors);\n  //   return isValid;\n  // };\n  console.log(formData);\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n\n    // Iterate over formData to check for empty fields\n    Object.keys(formData).forEach(key => {\n      // Exclude the 'Resume' field from this check since it's handled separately\n      if (key !== \"Resume\") {\n        const value = formData[key];\n        // Check if the field is either not set, an empty string, or (for dropdowns) the placeholder value\n        if (!value || value === \"\" || value === \"Select an option\") {\n          newErrors[key] = \"This field is required.\";\n          isValid = false;\n        }\n      }\n    });\n\n    // Additional validation for EmailId\n    if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n      newErrors.EmailId = \"Invalid email format.\";\n      isValid = false;\n    }\n\n    // Check for resume upload\n    if (!formData.Resume) {\n      newErrors.Resume = \"Please upload a resume.\";\n      isValid = false;\n    }\n    setValidationErrors(newErrors);\n    return isValid;\n  };\n  const uploadResume = async file => {\n    const filename = encodeURIComponent(file.name);\n    // const uploadUrl = `${process.env.REACT_APP_API_URL}/${formData.ReqId}/${filename}`;\n    const uploadUrl = `${process.env.REACT_APP_API_URL}/${filename}`;\n    const fileData = new FormData();\n    fileData.append(\"file\", file);\n    try {\n      const response = await fetch(uploadUrl, {\n        method: \"POST\",\n        body: fileData\n      });\n      const data = await response.json();\n      console.log(\"Server response:\", data);\n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n\n      // Since the server confirms success but doesn't provide a URL, log the success and maybe return a success message instead\n      if (data.message === \"File uploaded successfully\") {\n        console.log(data.message);\n        // Return a static message or a mock URL, or adjust as needed\n        return \"Upload successful, no URL provided\"; // Placeholder return value\n      } else {\n        throw new Error(\"Unexpected server response, upload may not be successful.\");\n      }\n    } catch (error) {\n      console.error(\"Upload Error:\", error);\n      throw error;\n    }\n  };\n\n  //Dynamo DB API Call\n\n  const submitForm = async () => {\n    const submitUrl = process.env.REACT_APP_FORM_URL;\n    try {\n      const response = await fetch(submitUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) throw new Error(\"Failed to submit form.\");\n      return await response.json(); // or handle success without expecting a return value\n    } catch (error) {\n      console.error(\"Submission error:\", error);\n      throw error;\n    }\n  };\n  const handleDropdownChange = e => {\n    console.log(e.target.id);\n    const {\n      id,\n      value\n    } = e.target; // `id` is \"ImmigrationStatus\", and `value` is the selected option's value\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [id]: value // Dynamically updates the correct key in formData based on the dropdown's id\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsSubmitting(true);\n    try {\n      if (formData.Resume) {\n        const resumeUrl = await uploadResume(formData.Resume);\n        // Update formData with the resume URL for submission\n        const updatedFormData = {\n          ...formData,\n          ResumeUrl: resumeUrl\n        };\n        await submitForm(updatedFormData);\n        setShowPopup(true); // Show success message\n        setFormData(initialFormData); // Reset form\n      } else {\n        // Handle the case where a resume is required but not uploaded\n        throw new Error(\"Resume is required.\");\n      }\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setFormData(initialFormData);\n    setSelectedRecruiterName(\"\");\n    setSelectRecruitingStatus(\"\");\n    setSelectImmigrationStatus(\"\");\n    setSelectContractType(\"\");\n    setSelectStateName(\"\");\n    setSelectQuestionnaire(\"\");\n    setSelectSubmissionStatus(\"\");\n    setValidationErrors({});\n    if (resumeInputRef.current) {\n      resumeInputRef.current.value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold text-white capitalize dark:text-white\",\n        children: \"Employee Information Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"FullName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"FullName\",\n              type: \"String\",\n              placeholder: \"Full Name\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.FullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), validationErrors.FullName && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.FullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ReqId\",\n              children: \"Required ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ReqId\",\n              type: \"number\",\n              placeholder: \"ID\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ReqId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), validationErrors.ReqId && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ReqId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ReqTitle\",\n              children: \"Required Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ReqTitle\",\n              type: \"String\",\n              placeholder: \"Title\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ReqTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), validationErrors.ReqTitle && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ReqTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"Role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"Role\",\n              type: \"String\",\n              placeholder: \"Role\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.Role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), validationErrors.Role && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.Role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ReqCreationDate\",\n              children: \"Required Creation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ReqCreationDate\"\n              // type=\"Number\"\n              ,\n              type: \"String\",\n              placeholder: \"MM/DD/YYYY\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ReqCreationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), validationErrors.ReqCreationDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ReqCreationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"VendorID\",\n              children: \"Vendor ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"VendorID\",\n              type: \"String\",\n              placeholder: \"Vendor ID\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.VendorID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), validationErrors.VendorID && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.VendorID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"BillRate\",\n              children: \"Bill Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"BillRate\",\n              type: \"number\",\n              placeholder: \"Bill Rate\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.BillRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), validationErrors.BillRate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.BillRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ImmigrationStatus\",\n              className: \"text-white dark:text-gray-200 mr-4\",\n              children: \"Immigration Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"dropdownHoverContainer\",\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsImmigrationStatusDropdownOpen(!isImmigrationStatusDropdownOpen),\n                className: \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-3 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n                type: \"button\",\n                children: [selectImmigrationStatus || \"Select Option\", /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-10 h-5 ml-2\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  fill: \"none\",\n                  viewBox: \"0 0 20 20\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    stroke: \"currentColor\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M6 8l4 4 4-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this), isImmigrationStatusDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute z-10 mt-1 bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"py-1 text-sm text-gray-700 dark:text-gray-200\",\n                  children: immigrationStatus.map((status, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\",\n                      onClick: () => {\n                        setSelectImmigrationStatus(status);\n                        handleDropdownChange({\n                          target: {\n                            id: \"ImmigrationStatus\",\n                            value: status\n                          }\n                        });\n                        setIsImmigrationStatusDropdownOpen(false);\n                      },\n                      children: status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this), validationErrors.ImmigrationStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-xs italic mt-2\",\n                children: validationErrors.ImmigrationStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ContractType\",\n              className: \"text-white dark:text-gray-200 mr-4\",\n              children: \"Contract Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"dropdownHoverContainer\",\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsDropdownOpen(!isDropdownOpen),\n                className: \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-3 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n                type: \"button\",\n                children: [selectContractType || \"Select Option\", /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-10 h-5 ml-2\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  fill: \"none\",\n                  viewBox: \"0 0 20 20\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    stroke: \"currentColor\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M6 8l4 4 4-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute z-10 mt-1 bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"py-1 text-sm text-gray-700 dark:text-gray-200\",\n                  children: contractType.map((status, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\",\n                      onClick: () => {\n                        setSelectContractType(status);\n                        handleDropdownChange({\n                          target: {\n                            id: \"ContractType\",\n                            value: status\n                          }\n                        });\n                        setIsDropdownOpen(false);\n                      },\n                      children: status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this), validationErrors.ContractType && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-xs italic mt-2\",\n                children: validationErrors.ContractType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"SubmissionDate\",\n              children: \"Submission Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"SubmissionDate\",\n              type: \"String\",\n              placeholder: \"MM/DD/YYYY\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.SubmissionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this), validationErrors.SubmissionDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.SubmissionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ReqSubmissionEndDate\",\n              children: \"Required Submission end Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ReqSubmissionEndDate\",\n              type: \"String\",\n              placeholder: \"MM/DD/YYYY\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ReqSubmissionEndDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this), validationErrors.ReqSubmissionEndDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ReqSubmissionEndDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"CandidateCurrentLocation\",\n              children: \"Candidate Current Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"CandidateCurrentLocation\",\n              type: \"String\",\n              placeholder: \"Candidate Current Location\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.CandidateCurrentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 15\n            }, this), validationErrors.CandidateCurrentLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.CandidateCurrentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ContactNumber\",\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ContactNumber\",\n              type: \"number\",\n              placeholder: \"Contact Number\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ContactNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this), validationErrors.ContactNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ContactNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"RecruiterName\",\n              children: \"Recruiter Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"RecruiterName\",\n              value: selectedRecruiterName,\n              onChange: e => {\n                setSelectedRecruiterName(e.target.value);\n                handleDropdownChange(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 17\n              }, this), recruiterName.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this), validationErrors.RecruiterName && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.RecruiterName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"State\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"State\",\n              value: selectStateName,\n              onChange: e => {\n                setSelectStateName(e.target.value);\n                handleDropdownChange(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Select an option\",\n                children: \"Select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 17\n              }, this), stateName.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 15\n            }, this), validationErrors.State && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.State\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"SubmissionStatus\",\n              children: \"Submission Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"SubmissionStatus\",\n              type: \"String\",\n              value: selectSubmissionStatus,\n              onChange: e => {\n                setSelectSubmissionStatus(e.target.value);\n                handleDropdownChange(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Select an option\",\n                children: \"Select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 17\n              }, this), submissionStatus.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 15\n            }, this), validationErrors.SubmissionStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.SubmissionStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"VendorRate\",\n              children: \"Vendor Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"VendorRate\",\n              type: \"String\",\n              placeholder: \"Vendor Rate \",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.VendorRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 15\n            }, this), validationErrors.VendorRate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.VendorRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"CandidatePayRate\",\n              children: \"Candidate Pay Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"CandidatePayRate\",\n              type: \"number\",\n              placeholder: \"Candidate Pay Rate\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.CandidatePayRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 15\n            }, this), validationErrors.CandidatePayRate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.CandidatePayRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"BillRateMargin\",\n              children: \"Bill Rate Margin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"BillRateMargin\",\n              type: \"number\",\n              placeholder: \"Bill Rate Margin\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.BillRateMargin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 15\n            }, this), validationErrors.BillRateMargin && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.BillRateMargin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ResumeSource\",\n              children: \"Resume Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ResumeSource\",\n              type: \"String\",\n              placeholder: \"Resume Source\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ResumeSource\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 15\n            }, this), validationErrors.ResumeSource && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ResumeSource\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"EmailId\",\n              children: \"Email ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"EmailId\",\n              type: \"String\",\n              placeholder: \"Email ID\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.EmailId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 15\n            }, this), validationErrors.EmailId && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.EmailId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"LinkedInID\",\n              children: \"LinkedIn ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"LinkedInID\",\n              type: \"String\",\n              placeholder: \"LinkedIn ID\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.LinkedInID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this), validationErrors.LinkedInID && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.LinkedInID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"EmployerInformation\",\n              children: \"Employer Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"EmployerInformation\",\n              type: \"String\",\n              placeholder: \"Employer Information\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.EmployerInformation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 15\n            }, this), validationErrors.EmployerInformation && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.EmployerInformation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ProfessionalReferences\",\n              children: \"Professional References\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ProfessionalReferences\",\n              type: \"String\",\n              placeholder: \"Professional References \",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ProfessionalReferences\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 15\n            }, this), validationErrors.ProfessionalReferences && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ProfessionalReferences\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"DOB\",\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"DOB\",\n              type: \"String\",\n              placeholder: \"MM/DD/YYYY\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.DOB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 15\n            }, this), validationErrors.DOB && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.DOB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ReqSkills\",\n              children: \"Required Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ReqSkills\",\n              type: \"String\",\n              placeholder: \"Required Skills\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ReqSkills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 15\n            }, this), validationErrors.ReqSkills && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ReqSkills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"ResumeFormattingNeeded\",\n              children: \"Resume Formatting Needed?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ResumeFormattingNeeded\",\n              type: \"String\",\n              placeholder: \"Resume Formating Needed?\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.ResumeFormattingNeeded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this), validationErrors.ResumeFormattingNeeded && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.ResumeFormattingNeeded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-white dark:text-gray-200\",\n              htmlFor: \"FormattedBy\",\n              children: \"Formatted By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"FormattedBy\",\n              type: \"String\",\n              placeholder: \"Formated By\",\n              className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\",\n              onChange: handleInputChange // attach handleInputChange here\n              ,\n              value: formData.FormattedBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 15\n            }, this), validationErrors.FormattedBy && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors.FormattedBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Resume\",\n              className: \"block text-sm font-medium text-white\",\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"Resume\",\n              name: \"Resume\",\n              type: \"file\",\n              onChange: handleInputChange,\n              ref: resumeInputRef,\n              className: \"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 15\n            }, this), validationErrors[\"Resume\"] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors[\"Resume\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: \"col-span-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-4\",\n          children: \"Submission Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your form has been submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClosePopup,\n          disabled: isSubmitting,\n          className: \"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(SuccessPage, \"QVTlrLxRinoxgOSLJt3KncTfcYo=\");\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SuccessPage","_s","initialFormData","FullName","ReqId","ReqTitle","Role","ReqCreationDate","VendorID","ImmigrationStatus","ContractType","SubmissionDate","ReqSubmissionEndDate","CandidateCurrentLocation","ContactNumber","RecruiterName","State","SubmissionStatus","VendorRate","CandidatePayRate","BillRateMargin","BillRate","ResumeSource","EmailId","LinkedInID","EmployerInformation","ProfessionalReferences","DOB","ReqSkills","ResumeFormattingNeeded","FormattedBy","Resume","formData","setFormData","validationErrors","setValidationErrors","showPopup","setShowPopup","isSubmitting","setIsSubmitting","resumeInputRef","recruiterName","process","env","REACT_APP_RECRUITER_NAME","split","selectedRecruiterName","setSelectedRecruiterName","recruitingStatus","REACT_APP_RECRUITING_STATUS","selectRecruitingStatus","setSelectRecruitingStatus","immigrationStatus","REACT_APP_IMMIGRATION_STATUS","selectImmigrationStatus","setSelectImmigrationStatus","contractType","REACT_APP_CONTRACT_TYPE","selectContractType","setSelectContractType","stateName","REACT_APP_STATE_NAME","selectStateName","setSelectStateName","questionnaire","REACT_APP_QUESTIONNAIRE","selectQuestionnaire","setSelectQuestionnaire","submissionStatus","REACT_APP_SUBMISSION_STATUS","selectSubmissionStatus","setSelectSubmissionStatus","isImmigrationStatusDropdownOpen","setIsImmigrationStatusDropdownOpen","handleOutsideClick","event","target","closest","document","addEventListener","removeEventListener","isValidEmail","email","test","handleInputChange","e","id","value","files","file","allowedTypes","includes","type","size","newErrors","console","log","validateForm","isValid","Object","keys","forEach","key","uploadResume","filename","encodeURIComponent","name","uploadUrl","REACT_APP_API_URL","fileData","FormData","append","response","fetch","method","body","data","json","ok","Error","status","message","error","submitForm","submitUrl","REACT_APP_FORM_URL","headers","JSON","stringify","handleDropdownChange","prevFormData","handleSubmit","preventDefault","resumeUrl","updatedFormData","ResumeUrl","alert","handleClosePopup","current","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","placeholder","onChange","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","map","index","setIsDropdownOpen","isDropdownOpen","option","ref","disabled","_c","$RefreshReg$"],"sources":["/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/SuccessPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction SuccessPage() {\n  const initialFormData = {\n    FullName: \"\",\n    // RequiredID: \"\",\n    ReqId: \"\",\n    ReqTitle: \"\",\n    Role: \"\",\n    ReqCreationDate: \"\",\n    VendorID: \"\",\n    ImmigrationStatus: \"\",\n    ContractType: \"\",\n    SubmissionDate: \"\",\n    ReqSubmissionEndDate: \"\",\n    CandidateCurrentLocation: \"\",\n    ContactNumber: \"\",\n    RecruiterName: \"\",\n    State: \"\",\n    SubmissionStatus: \"\",\n    VendorRate: \"\",\n    CandidatePayRate: \"\",\n    BillRateMargin: \"\",\n    BillRate: \"\",\n    ResumeSource: \"\",\n    EmailId: \"\",\n    LinkedInID: \"\",\n    EmployerInformation: \"\",\n    ProfessionalReferences: \"\",\n    DOB: \"\",\n    ReqSkills: \"\",\n    ResumeFormattingNeeded: \"\",\n    FormattedBy: \"\",\n    Resume: null, // Placeholder for the resume fileßƒ\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const resumeInputRef = useRef(null);\n\n  const recruiterName = process.env.REACT_APP_RECRUITER_NAME.split(\",\");\n  const [selectedRecruiterName, setSelectedRecruiterName] = useState(\"\");\n\n  const recruitingStatus = process.env.REACT_APP_RECRUITING_STATUS.split(\",\");\n  const [selectRecruitingStatus, setSelectRecruitingStatus] = useState(\"\");\n\n  const immigrationStatus = process.env.REACT_APP_IMMIGRATION_STATUS.split(\",\");\n  const [selectImmigrationStatus, setSelectImmigrationStatus] = useState(\"\");\n\n  const contractType = process.env.REACT_APP_CONTRACT_TYPE.split(\",\");\n  const [selectContractType, setSelectContractType] = useState(\"\");\n\n  const stateName = process.env.REACT_APP_STATE_NAME.split(\",\");\n  const [selectStateName, setSelectStateName] = useState(\"\");\n\n  const questionnaire = process.env.REACT_APP_QUESTIONNAIRE.split(\",\");\n  const [selectQuestionnaire, setSelectQuestionnaire] = useState(\"\");\n\n  const submissionStatus = process.env.REACT_APP_SUBMISSION_STATUS.split(\",\");\n  const [selectSubmissionStatus, setSelectSubmissionStatus] = useState(\"\");\n\n  const [isImmigrationStatusDropdownOpen, setIsImmigrationStatusDropdownOpen] =\n    useState(false);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (!event.target.closest(\"#dropdownHoverContainer\")) {\n        setIsImmigrationStatusDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => document.removeEventListener(\"click\", handleOutsideClick);\n  }, []);\n\n  const isValidEmail = (email) => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n\n  const handleInputChange = (e) => {\n    const { id, value, files } = e.target;\n    if (id === \"Resume\" && files) {\n      const file = files[0];\n      if (file) {\n        const allowedTypes = [\n          \"application/pdf\",\n          \"application/msword\",\n          \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        ];\n        if (!allowedTypes.includes(file.type) || file.size > 1024 * 1024 * 10) {\n          setValidationErrors({\n            ...validationErrors,\n            Resume: \"Only PDF or DOC files under 10MB are allowed.\",\n          });\n        } else {\n          setFormData({\n            ...formData,\n            Resume: file,\n          });\n          let newErrors = { ...validationErrors };\n          delete newErrors.Resume;\n          setValidationErrors(newErrors);\n        }\n      }\n    } else {\n      setFormData({\n        ...formData,\n        [id]: value,\n      });\n      let newErrors = { ...validationErrors };\n      delete newErrors[id];\n      setValidationErrors(newErrors);\n    }\n  };\n\n  // const validateForm = () => {\n  //   let isValid = true;\n  //   const newErrors = {};\n  //   Object.keys(formData).forEach((key) => {\n  //     if (!formData[key] && key !== \"Resume\") {\n  //       newErrors[key] = \"This field is required.\";\n  //       isValid = false;\n  //     }\n  //   });\n  //   if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n  //     newErrors.EmailId = \"Invalid email format.\";\n  //     isValid = false;\n  //   }\n\n  //   if (!formData.Resume) {\n  //     newErrors.Resume = \"Please upload a resume.\";\n  //     isValid = false;\n  //   }\n\n  //   setValidationErrors(newErrors);\n  //   return isValid;\n  // };\n  console.log(formData);\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n\n    // Iterate over formData to check for empty fields\n    Object.keys(formData).forEach((key) => {\n      // Exclude the 'Resume' field from this check since it's handled separately\n      if (key !== \"Resume\") {\n        const value = formData[key];\n        // Check if the field is either not set, an empty string, or (for dropdowns) the placeholder value\n        if (!value || value === \"\" || value === \"Select an option\") {\n          newErrors[key] = \"This field is required.\";\n          isValid = false;\n        }\n      }\n    });\n\n    // Additional validation for EmailId\n    if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n      newErrors.EmailId = \"Invalid email format.\";\n      isValid = false;\n    }\n\n    // Check for resume upload\n    if (!formData.Resume) {\n      newErrors.Resume = \"Please upload a resume.\";\n      isValid = false;\n    }\n\n    setValidationErrors(newErrors);\n    return isValid;\n  };\n\n  const uploadResume = async (file) => {\n    const filename = encodeURIComponent(file.name);\n    // const uploadUrl = `${process.env.REACT_APP_API_URL}/${formData.ReqId}/${filename}`;\n    const uploadUrl = `${process.env.REACT_APP_API_URL}/${filename}`;\n\n    const fileData = new FormData();\n    fileData.append(\"file\", file);\n\n    try {\n      const response = await fetch(uploadUrl, {\n        method: \"POST\",\n        body: fileData,\n      });\n      const data = await response.json();\n\n      console.log(\"Server response:\", data);\n\n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n\n      // Since the server confirms success but doesn't provide a URL, log the success and maybe return a success message instead\n      if (data.message === \"File uploaded successfully\") {\n        console.log(data.message);\n        // Return a static message or a mock URL, or adjust as needed\n        return \"Upload successful, no URL provided\"; // Placeholder return value\n      } else {\n        throw new Error(\n          \"Unexpected server response, upload may not be successful.\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Upload Error:\", error);\n      throw error;\n    }\n  };\n\n  //Dynamo DB API Call\n\n  const submitForm = async () => {\n    const submitUrl = process.env.REACT_APP_FORM_URL;\n    try {\n      const response = await fetch(submitUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n      if (!response.ok) throw new Error(\"Failed to submit form.\");\n      return await response.json(); // or handle success without expecting a return value\n    } catch (error) {\n      console.error(\"Submission error:\", error);\n      throw error;\n    }\n  };\n\n  const handleDropdownChange = (e) => {\n    console.log(e.target.id);\n    const { id, value } = e.target; // `id` is \"ImmigrationStatus\", and `value` is the selected option's value\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [id]: value, // Dynamically updates the correct key in formData based on the dropdown's id\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsSubmitting(true);\n\n    try {\n      if (formData.Resume) {\n        const resumeUrl = await uploadResume(formData.Resume);\n        // Update formData with the resume URL for submission\n        const updatedFormData = { ...formData, ResumeUrl: resumeUrl };\n        await submitForm(updatedFormData);\n        setShowPopup(true); // Show success message\n        setFormData(initialFormData); // Reset form\n      } else {\n        // Handle the case where a resume is required but not uploaded\n        throw new Error(\"Resume is required.\");\n      }\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setFormData(initialFormData);\n    setSelectedRecruiterName(\"\");\n    setSelectRecruitingStatus(\"\");\n    setSelectImmigrationStatus(\"\");\n    setSelectContractType(\"\");\n    setSelectStateName(\"\");\n    setSelectQuestionnaire(\"\");\n    setSelectSubmissionStatus(\"\");\n    setValidationErrors({});\n    if (resumeInputRef.current) {\n      resumeInputRef.current.value = \"\";\n    }\n  };\n\n  return (\n    <div>\n      <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n        <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n          Employee Information Form\n        </h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"FullName\"\n              >\n                Full Name\n              </label>\n              <input\n                id=\"FullName\"\n                type=\"String\"\n                placeholder=\"Full Name\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.FullName}\n              />\n              {validationErrors.FullName && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.FullName}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\"text-white dark:text-gray-200\" htmlFor=\"ReqId\">\n                Required ID\n              </label>\n              <input\n                id=\"ReqId\"\n                type=\"number\"\n                placeholder=\"ID\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ReqId}\n              />\n              {validationErrors.ReqId && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ReqId}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ReqTitle\"\n              >\n                Required Title\n              </label>\n              <input\n                id=\"ReqTitle\"\n                type=\"String\"\n                placeholder=\"Title\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ReqTitle}\n              />\n              {validationErrors.ReqTitle && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ReqTitle}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\"text-white dark:text-gray-200\" htmlFor=\"Role\">\n                Role\n              </label>\n              <input\n                id=\"Role\"\n                type=\"String\"\n                placeholder=\"Role\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.Role}\n              />\n              {validationErrors.Role && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.Role}\n                </p>\n              )}\n            </div>\n            {/* </div> */}\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ReqCreationDate\"\n              >\n                Required Creation Date\n              </label>\n              <input\n                id=\"ReqCreationDate\"\n                // type=\"Number\"\n                type=\"String\"\n                placeholder=\"MM/DD/YYYY\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ReqCreationDate}\n              />\n              {validationErrors.ReqCreationDate && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ReqCreationDate}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"VendorID\"\n              >\n                Vendor ID\n              </label>\n              <input\n                id=\"VendorID\"\n                type=\"String\"\n                placeholder=\"Vendor ID\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.VendorID}\n              />\n              {validationErrors.VendorID && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.VendorID}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"BillRate\"\n              >\n                Bill Rate\n              </label>\n              <input\n                id=\"BillRate\"\n                type=\"number\"\n                placeholder=\"Bill Rate\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.BillRate}\n              />\n              {validationErrors.BillRate && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.BillRate}\n                </p>\n              )}\n            </div>\n            {/* <div id=\"dropdownHoverContainer\" className=\"relative\">\n              <button\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                type=\"button\"\n              >\n                Select Immigration Status\n                <svg\n                  className=\"w-4 h-4 ml-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M6 8l4 4 4-4\"\n                  />\n                </svg>\n              </button>\n\n              {isDropdownOpen && (\n                <div className=\"absolute z-10 mt-1 bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\">\n                  <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\">\n                    {immigrationStatus.map((status, index) => (\n                      <li key={index}>\n                        <button\n                          type=\"button\"\n                          className=\"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                          onClick={() => {\n                            setSelectImmigrationStatus(status);\n                            handleDropdownChange({\n                              target: {\n                                id: \"ImmigrationStatus\",\n                                value: status,\n                              },\n                            });\n                            setIsDropdownOpen(false);\n                          }}\n                        >\n                          {status}\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              {validationErrors.ImmigrationStatus && (\n                <p className=\"text-red-500 text-xs italic mt-2\">\n                  {validationErrors.ImmigrationStatus}\n                </p>\n              )}\n            </div> */}\n            <div className=\"flex items-center justify-between\">\n              <label\n                htmlFor=\"ImmigrationStatus\"\n                className=\"text-white dark:text-gray-200 mr-4\"\n              >\n                Immigration Status:\n              </label>\n\n              <div id=\"dropdownHoverContainer\" className=\"relative\">\n                <button\n                  onClick={() =>\n                    setIsImmigrationStatusDropdownOpen(\n                      !isImmigrationStatusDropdownOpen\n                    )\n                  }\n                  className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-3 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                  type=\"button\"\n                >\n                  {selectImmigrationStatus || \"Select Option\"}\n                  <svg\n                    className=\"w-10 h-5 ml-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 8l4 4 4-4\"\n                    />\n                  </svg>\n                </button>\n\n                {isImmigrationStatusDropdownOpen && (\n                  <div className=\"absolute z-10 mt-1 bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\">\n                    <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\">\n                      {immigrationStatus.map((status, index) => (\n                        <li key={index}>\n                          <button\n                            type=\"button\"\n                            className=\"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                            onClick={() => {\n                              setSelectImmigrationStatus(status);\n                              handleDropdownChange({\n                                target: {\n                                  id: \"ImmigrationStatus\",\n                                  value: status,\n                                },\n                              });\n                              setIsImmigrationStatusDropdownOpen(false);\n                            }}\n                          >\n                            {status}\n                          </button>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n\n                {validationErrors.ImmigrationStatus && (\n                  <p className=\"text-red-500 text-xs italic mt-2\">\n                    {validationErrors.ImmigrationStatus}\n                  </p>\n                )}\n              </div>\n            </div>\n            {/* <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ImmigrationStatus\"\n              >\n                Immigration Status\n              </label> */}\n            {/* <input\n                id=\"ImmigrationStatus\"\n                type=\"String\"\n                placeholder=\"Immigration Status\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ImmigrationStatus}\n              /> */}\n            {/* <select\n                id=\"ImmigrationStatus\"\n                value={selectImmigrationStatus}\n                onChange={(e) => {\n                  setSelectImmigrationStatus(e.target.value);\n                  handleDropdownChange(e);\n                }}\n              > */}\n            {/* First option as default */}\n            {/* <option value=\"Select an option\">Select an option</option>\n\n                {immigrationStatus.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select> */}\n            {/* {validationErrors.ImmigrationStatus && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ImmigrationStatus}\n                </p>\n              )}\n            </div> */}\n            {/* <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ContractType\"\n              >\n                Contract Type\n              </label>\n              {/* <input\n                id=\"ContractType\"\n                type=\"String\"\n                placeholder=\"Contract Type\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ContractType}\n              /> */}{\" \"}\n            {/* <select\n                id=\"ContractType\"\n                value={selectContractType}\n                onChange={(e) => {\n                  setSelectContractType(e.target.value);\n                  handleDropdownChange(e);\n                }}\n              >\n                {/* First option as default */}\n            {/* <option value=\"Select an option\">Select an option</option>\n\n                {contractType.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n              {validationErrors.ContractType && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ContractType}\n                </p>\n              )}\n            // </div> */}\n            <div className=\"flex items-center justify-between\">\n              <label\n                htmlFor=\"ContractType\"\n                className=\"text-white dark:text-gray-200 mr-4\"\n              >\n                Contract Type:\n              </label>\n\n              <div id=\"dropdownHoverContainer\" className=\"relative\">\n                <button\n                  onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                  className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-3 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                  type=\"button\"\n                >\n                  {selectContractType || \"Select Option\"}\n                  <svg\n                    className=\"w-10 h-5 ml-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path\n                      stroke=\"currentColor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 8l4 4 4-4\"\n                    />\n                  </svg>\n                </button>\n\n                {isDropdownOpen && (\n                  <div className=\"absolute z-10 mt-1 bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\">\n                    <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-200\">\n                      {contractType.map((status, index) => (\n                        <li key={index}>\n                          <button\n                            type=\"button\"\n                            className=\"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                            onClick={() => {\n                              setSelectContractType(status);\n                              handleDropdownChange({\n                                target: {\n                                  id: \"ContractType\",\n                                  value: status,\n                                },\n                              });\n                              setIsDropdownOpen(false);\n                            }}\n                          >\n                            {status}\n                          </button>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n\n                {validationErrors.ContractType && (\n                  <p className=\"text-red-500 text-xs italic mt-2\">\n                    {validationErrors.ContractType}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"SubmissionDate\"\n              >\n                Submission Date\n              </label>\n              <input\n                id=\"SubmissionDate\"\n                type=\"String\"\n                placeholder=\"MM/DD/YYYY\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.SubmissionDate}\n              />\n              {validationErrors.SubmissionDate && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.SubmissionDate}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ReqSubmissionEndDate\"\n              >\n                Required Submission end Date\n              </label>\n              <input\n                id=\"ReqSubmissionEndDate\"\n                type=\"String\"\n                placeholder=\"MM/DD/YYYY\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ReqSubmissionEndDate}\n              />\n              {validationErrors.ReqSubmissionEndDate && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ReqSubmissionEndDate}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"CandidateCurrentLocation\"\n              >\n                Candidate Current Location\n              </label>\n              <input\n                id=\"CandidateCurrentLocation\"\n                type=\"String\"\n                placeholder=\"Candidate Current Location\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.CandidateCurrentLocation}\n              />\n              {validationErrors.CandidateCurrentLocation && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.CandidateCurrentLocation}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ContactNumber\"\n              >\n                Contact Number\n              </label>\n              <input\n                id=\"ContactNumber\"\n                type=\"number\"\n                placeholder=\"Contact Number\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ContactNumber}\n              />\n              {validationErrors.ContactNumber && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ContactNumber}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"RecruiterName\"\n              >\n                Recruiter Name\n              </label>\n              {/* <input\n                id=\"RecruiterName\"\n                type=\"String\"\n                placeholder=\"Recruiter Name\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.RecruiterName}\n              /> */}\n              <select\n                id=\"RecruiterName\"\n                value={selectedRecruiterName}\n                onChange={(e) => {\n                  setSelectedRecruiterName(e.target.value);\n                  handleDropdownChange(e);\n                }}\n              >\n                {/* First option as default */}\n                <option value=\"\">Select an option</option>\n\n                {recruiterName.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n\n              {validationErrors.RecruiterName && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.RecruiterName}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\"text-white dark:text-gray-200\" htmlFor=\"State\">\n                State\n              </label>\n              {/* <input\n                id=\"State\"\n                type=\"String\"\n                placeholder=\"State\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.State}\n              /> */}\n              <select\n                id=\"State\"\n                value={selectStateName}\n                onChange={(e) => {\n                  setSelectStateName(e.target.value);\n                  handleDropdownChange(e);\n                }}\n              >\n                {/* First option as default */}\n                <option value=\"Select an option\">Select an option</option>\n\n                {stateName.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n              {validationErrors.State && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.State}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"SubmissionStatus\"\n              >\n                Submission Status\n              </label>\n              {/* <input\n                id=\"SubmissionStatus\"\n                type=\"String\"\n                placeholder=\"Submission Status\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.SubmissionStatus}\n              /> */}\n              <select\n                id=\"SubmissionStatus\"\n                type=\"String\"\n                value={selectSubmissionStatus}\n                onChange={(e) => {\n                  setSelectSubmissionStatus(e.target.value);\n                  handleDropdownChange(e);\n                }}\n              >\n                <option value=\"Select an option\">Select an option</option>\n\n                {submissionStatus.map((option, index) => (\n                  <option key={index} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n              {validationErrors.SubmissionStatus && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.SubmissionStatus}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"VendorRate\"\n              >\n                Vendor Rate\n              </label>\n              <input\n                id=\"VendorRate\"\n                type=\"String\"\n                placeholder=\"Vendor Rate \"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.VendorRate}\n              />\n              {validationErrors.VendorRate && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.VendorRate}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"CandidatePayRate\"\n              >\n                Candidate Pay Rate\n              </label>\n              <input\n                id=\"CandidatePayRate\"\n                type=\"number\"\n                placeholder=\"Candidate Pay Rate\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.CandidatePayRate}\n              />\n              {validationErrors.CandidatePayRate && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.CandidatePayRate}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"BillRateMargin\"\n              >\n                Bill Rate Margin\n              </label>\n              <input\n                id=\"BillRateMargin\"\n                type=\"number\"\n                placeholder=\"Bill Rate Margin\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.BillRateMargin}\n              />\n              {validationErrors.BillRateMargin && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.BillRateMargin}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ResumeSource\"\n              >\n                Resume Source\n              </label>\n              <input\n                id=\"ResumeSource\"\n                type=\"String\"\n                placeholder=\"Resume Source\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ResumeSource}\n              />\n              {validationErrors.ResumeSource && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ResumeSource}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"EmailId\"\n              >\n                Email ID\n              </label>\n              <input\n                id=\"EmailId\"\n                type=\"String\"\n                placeholder=\"Email ID\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.EmailId}\n              />\n              {validationErrors.EmailId && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.EmailId}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"LinkedInID\"\n              >\n                LinkedIn ID\n              </label>\n              <input\n                id=\"LinkedInID\"\n                type=\"String\"\n                placeholder=\"LinkedIn ID\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.LinkedInID}\n              />\n              {validationErrors.LinkedInID && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.LinkedInID}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"EmployerInformation\"\n              >\n                Employer Information\n              </label>\n              <input\n                id=\"EmployerInformation\"\n                type=\"String\"\n                placeholder=\"Employer Information\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.EmployerInformation}\n              />\n              {validationErrors.EmployerInformation && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.EmployerInformation}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ProfessionalReferences\"\n              >\n                Professional References\n              </label>\n              <input\n                id=\"ProfessionalReferences\"\n                type=\"String\"\n                placeholder=\"Professional References \"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ProfessionalReferences}\n              />\n              {validationErrors.ProfessionalReferences && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ProfessionalReferences}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\"text-white dark:text-gray-200\" htmlFor=\"DOB\">\n                DOB\n              </label>\n              <input\n                id=\"DOB\"\n                type=\"String\"\n                placeholder=\"MM/DD/YYYY\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.DOB}\n              />\n              {validationErrors.DOB && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.DOB}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ReqSkills\"\n              >\n                Required Skills\n              </label>\n              <input\n                id=\"ReqSkills\"\n                type=\"String\"\n                placeholder=\"Required Skills\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ReqSkills}\n              />\n              {validationErrors.ReqSkills && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ReqSkills}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"ResumeFormattingNeeded\"\n              >\n                Resume Formatting Needed?\n              </label>\n              <input\n                id=\"ResumeFormattingNeeded\"\n                type=\"String\"\n                placeholder=\"Resume Formating Needed?\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.ResumeFormattingNeeded}\n              />\n              {validationErrors.ResumeFormattingNeeded && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.ResumeFormattingNeeded}\n                </p>\n              )}\n            </div>\n            <div>\n              <label\n                className=\"text-white dark:text-gray-200\"\n                htmlFor=\"FormattedBy\"\n              >\n                Formatted By\n              </label>\n              <input\n                id=\"FormattedBy\"\n                type=\"String\"\n                placeholder=\"Formated By\"\n                className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n                onChange={handleInputChange} // attach handleInputChange here\n                value={formData.FormattedBy}\n              />\n              {validationErrors.FormattedBy && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors.FormattedBy}\n                </p>\n              )}\n            </div>\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"Resume\"\n                className=\"block text-sm font-medium text-white\"\n              >\n                Resume\n              </label>\n              <input\n                id=\"Resume\"\n                name=\"Resume\"\n                type=\"file\"\n                onChange={handleInputChange}\n                ref={resumeInputRef}\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n              />\n              {validationErrors[\"Resume\"] && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors[\"Resume\"]}\n                </p>\n              )}\n            </div>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"col-span-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </section>\n      {showPopup && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n          <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n            <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n            <p>Your form has been submitted successfully.</p>\n            <button\n              onClick={handleClosePopup}\n              disabled={isSubmitting}\n              className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SuccessPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}