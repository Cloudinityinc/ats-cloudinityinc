{"ast":null,"code":"var _jsxFileName = \"/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/SuccessPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef } from \"react\";\n\n// function SuccessPage() {\n//   const initialFormData = {\n//     FullName: \"\",\n//     // RequiredID: \"\",\n//     ReqId: \"\",\n//     ReqTitle: \"\",\n//     Role: \"\",\n//     ReqCreationDate: \"\",\n//     VendorID: \"\",\n//     ImmigrationStatus: \"\",\n//     ContractType: \"\",\n//     SubmissionDate: \"\",\n//     ReqSubmissionEndDate: \"\",\n//     CandidateCurrentLocation: \"\",\n//     ContactNumber: \"\",\n//     RecruiterName: \"\",\n//     State: \"\",\n//     SubmissionStatus: \"\",\n//     VendorRate: \"\",\n//     CandidatePayRate: \"\",\n//     BillRateMargin: \"\",\n//     BillRate: \"\",\n//     ResumeSource: \"\",\n//     EmailId: \"\",\n//     LinkedInID: \"\",\n//     EmployerInformation: \"\",\n//     ProfessionalReferences: \"\",\n//     DOB: \"\",\n//     ReqSkills: \"\",\n//     ResumeFormattingNeeded: \"\",\n//     FormattedBy: \"\",\n//     Resume: null, // Placeholder for the resume file\n//   };\n//   const [formData, setFormData] = useState(initialFormData);\n//   const [validationErrors, setValidationErrors] = useState({});\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const resumeInputRef = useRef(null);\n\n//   const isValidEmail = (email) => {\n//     return /\\S+@\\S+\\.\\S+/.test(email);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { id, value, files } = e.target;\n//     if (id === \"Resume\" && files) {\n//       const file = files[0];\n//       if (file) {\n//         const allowedTypes = [\n//           \"application/pdf\",\n//           \"application/msword\",\n//           \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n//         ];\n//         if (!allowedTypes.includes(file.type) || file.size > 1024 * 1024 * 10) {\n//           setValidationErrors({\n//             ...validationErrors,\n//             Resume: \"Only PDF or DOC files under 10MB are allowed.\",\n//           });\n//         } else {\n//           setFormData({\n//             ...formData,\n//             Resume: file,\n//           });\n//           let newErrors = { ...validationErrors };\n//           delete newErrors.Resume;\n//           setValidationErrors(newErrors);\n//         }\n//       }\n//     } else {\n//       setFormData({\n//         ...formData,\n//         [id]: value,\n//       });\n//       let newErrors = { ...validationErrors };\n//       delete newErrors[id];\n//       setValidationErrors(newErrors);\n//     }\n//   };\n\n//   const validateForm = () => {\n//     let isValid = true;\n//     const newErrors = {};\n//     Object.keys(formData).forEach((key) => {\n//       if (!formData[key] && key !== \"Resume\") {\n//         newErrors[key] = \"This field is required.\";\n//         isValid = false;\n//       }\n//     });\n//     if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n//       newErrors.EmailId = \"Invalid email format.\";\n//       isValid = false;\n//     }\n\n//     if (!formData.Resume) {\n//       newErrors.Resume = \"Please upload a resume.\";\n//       isValid = false;\n//     }\n\n//     setValidationErrors(newErrors);\n//     return isValid;\n//   };\n//   const uploadResume = async (file) => {\n//     const filename = encodeURIComponent(file.name);\n//     // const uploadUrl = `https://lrl0r0t06c.execute-api.us-east-1.amazonaws.com/Prod/upload/${filename}`;\n//     const uploadUrl = `${process.env.REACT_APP_API_URL}/${filename}`;\n//     const fileData = new FormData();\n//     fileData.append(\"file\", file);\n\n//     try {\n//       const response = await fetch(uploadUrl, {\n//         method: \"POST\",\n//         body: fileData,\n//       });\n//       const data = await response.json();\n\n//       console.log(\"Server response:\", data);\n\n//       if (!response.ok) {\n//         throw new Error(`Server responded with status: ${response.status}`);\n//       }\n\n//       // Since the server confirms success but doesn't provide a URL, log the success and maybe return a success message instead\n//       if (data.message === \"File uploaded successfully\") {\n//         console.log(data.message);\n//         // Return a static message or a mock URL, or adjust as needed\n//         return \"Upload successful, no URL provided\"; // Placeholder return value\n//       } else {\n//         throw new Error(\n//           \"Unexpected server response, upload may not be successful.\"\n//         );\n//       }\n//     } catch (error) {\n//       console.error(\"Upload Error:\", error);\n//       throw error;\n//     }\n//   };\n\n//   //Dynamo DB API Call\n\n//   const submitForm = async () => {\n//     // Assuming you have an API endpoint to submit form data to DynamoDB\n//     const submitUrl =\n//       \"https://mkou1u2f62.execute-api.us-east-1.amazonaws.com/Prod/submit\";\n//     try {\n//       const response = await fetch(submitUrl, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(formData),\n//       });\n//       if (!response.ok) throw new Error(\"Failed to submit form.\");\n//       return await response.json(); // or handle success without expecting a return value\n//     } catch (error) {\n//       console.error(\"Submission error:\", error);\n//       throw error;\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!validateForm()) return;\n//     setIsSubmitting(true);\n\n//     try {\n//       if (formData.Resume) {\n//         const resumeUrl = await uploadResume(formData.Resume);\n//         // Update formData with the resume URL for submission\n//         const updatedFormData = { ...formData, ResumeUrl: resumeUrl };\n//         await submitForm(updatedFormData);\n//         setShowPopup(true); // Show success message\n//         setFormData(initialFormData); // Reset form\n//       } else {\n//         // Handle the case where a resume is required but not uploaded\n//         throw new Error(\"Resume is required.\");\n//       }\n//     } catch (error) {\n//       alert(`Error: ${error.message}`);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   const handleClosePopup = () => {\n//     setShowPopup(false);\n//     setFormData(initialFormData);\n//     setValidationErrors({});\n//     if (resumeInputRef.current) {\n//       resumeInputRef.current.value = \"\";\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* The form component with Tailwind CSS */}\n//       <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n//         <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n//           Employee Information Form\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n//             {/* Input fields generated based on formData */}\n//             {/* {Object.keys(initialFormData)\n//               .filter((key) => key !== \"Resume\")\n//               .map((key) => (\n//                 <div key={key} className=\"mb-4\">\n//                   <label\n//                     htmlFor={key}\n//                     className=\"text-white dark:text-gray-200 block text-sm font-bold mb-2\"\n//                   >\n//                     {key.replace(/([A-Z])/g, \" $1\").trim()}\n//                   </label>\n//                   <input\n//                     // type=\"text\"\n//                     type={key === \"RequiredID\" ? \"number\" : \"String\"} // Conditionally set the input type\n//                     id={key}\n//                     name={key}\n//                     value={formData[key]}\n//                     onChange={handleInputChange}\n//                     className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                   />\n//                   {validationErrors[key] && (\n//                     <p className=\"text-red-500 text-xs italic\">\n//                       {validationErrors[key]}\n//                     </p>\n//                   )}\n//                 </div>\n//               ))} */}\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"FullName\"\n//               >\n//                 Full Name\n//               </label>\n//               <input\n//                 id=\"FullName\"\n//                 type=\"String\"\n//                 placeholder=\"Full Name\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.FullName}\n//               />\n//               {validationErrors.FullName && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.FullName}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"ReqId\">\n//                 Required ID\n//               </label>\n//               <input\n//                 id=\"ReqId\"\n//                 type=\"number\"\n//                 placeholder=\"ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqId}\n//               />\n//               {validationErrors.ReqId && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqId}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqTitle\"\n//               >\n//                 Required Title\n//               </label>\n//               <input\n//                 id=\"ReqTitle\"\n//                 type=\"String\"\n//                 placeholder=\"Title\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqTitle}\n//               />\n//               {validationErrors.ReqTitle && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqTitle}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"Role\">\n//                 Role\n//               </label>\n//               <input\n//                 id=\"Role\"\n//                 type=\"String\"\n//                 placeholder=\"Role\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.Role}\n//               />\n//               {validationErrors.Role && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.Role}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqCreationDate\"\n//               >\n//                 Required Creation Date\n//               </label>\n//               <input\n//                 id=\"ReqCreationDate\"\n//                 // type=\"Number\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqCreationDate}\n//               />\n//               {validationErrors.ReqCreationDate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqCreationDate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"VendorID\"\n//               >\n//                 Vendor ID\n//               </label>\n//               <input\n//                 id=\"VendorID\"\n//                 type=\"String\"\n//                 placeholder=\"Vendor ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.VendorID}\n//               />\n//               {validationErrors.VendorID && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.VendorID}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"BillRate\"\n//               >\n//                 Bill Rate\n//               </label>\n//               <input\n//                 id=\"BillRate\"\n//                 type=\"number\"\n//                 placeholder=\"Bill Rate\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.BillRate}\n//               />\n//               {validationErrors.BillRate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.BillRate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ImmigrationStatus\"\n//               >\n//                 Immigration Status\n//               </label>\n//               <input\n//                 id=\"ImmigrationStatus\"\n//                 type=\"String\"\n//                 placeholder=\"Immigration Status\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ImmigrationStatus}\n//               />\n//               {validationErrors.ImmigrationStatus && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ImmigrationStatus}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ContractType\"\n//               >\n//                 Contract Type\n//               </label>\n//               <input\n//                 id=\"ContractType\"\n//                 type=\"String\"\n//                 placeholder=\"Contract Type\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ContractType}\n//               />\n//               {validationErrors.ContractType && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ContractType}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"SubmissionDate\"\n//               >\n//                 Submission Date\n//               </label>\n//               <input\n//                 id=\"SubmissionDate\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.SubmissionDate}\n//               />\n//               {validationErrors.SubmissionDate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.SubmissionDate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqSubmissionEndDate\"\n//               >\n//                 Required Submission end Date\n//               </label>\n//               <input\n//                 id=\"ReqSubmissionEndDate\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqSubmissionEndDate}\n//               />\n//               {validationErrors.ReqSubmissionEndDate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqSubmissionEndDate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"CandidateCurrentLocation\"\n//               >\n//                 Candidate Current Location\n//               </label>\n//               <input\n//                 id=\"CandidateCurrentLocation\"\n//                 type=\"String\"\n//                 placeholder=\"Candidate Current Location\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.CandidateCurrentLocation}\n//               />\n//               {validationErrors.CandidateCurrentLocation && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.CandidateCurrentLocation}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ContactNumber\"\n//               >\n//                 Contact Number\n//               </label>\n//               <input\n//                 id=\"ContactNumber\"\n//                 type=\"number\"\n//                 placeholder=\"Contact Number\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ContactNumber}\n//               />\n//               {validationErrors.ContactNumber && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ContactNumber}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"RecruiterName\"\n//               >\n//                 Recruiter Name\n//               </label>\n//               <input\n//                 id=\"RecruiterName\"\n//                 type=\"String\"\n//                 placeholder=\"Recruiter Name\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.RecruiterName}\n//               />\n//               {validationErrors.RecruiterName && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.RecruiterName}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"State\">\n//                 State\n//               </label>\n//               <input\n//                 id=\"State\"\n//                 type=\"String\"\n//                 placeholder=\"State\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.State}\n//               />\n//               {validationErrors.State && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.State}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"SubmissionStatus\"\n//               >\n//                 Submission Status\n//               </label>\n//               <input\n//                 id=\"SubmissionStatus\"\n//                 type=\"String\"\n//                 placeholder=\"Submission Status\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.SubmissionStatus}\n//               />\n//               {validationErrors.SubmissionStatus && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.SubmissionStatus}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"VendorRate\"\n//               >\n//                 Vendor Rate\n//               </label>\n//               <input\n//                 id=\"VendorRate\"\n//                 type=\"String\"\n//                 placeholder=\"Vendor Rate \"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.VendorRate}\n//               />\n//               {validationErrors.VendorRate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.VendorRate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"CandidatePayRate\"\n//               >\n//                 Candidate Pay Rate\n//               </label>\n//               <input\n//                 id=\"CandidatePayRate\"\n//                 type=\"number\"\n//                 placeholder=\"Candidate Pay Rate\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.CandidatePayRate}\n//               />\n//               {validationErrors.CandidatePayRate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.CandidatePayRate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"BillRateMargin\"\n//               >\n//                 Bill Rate Margin\n//               </label>\n//               <input\n//                 id=\"BillRateMargin\"\n//                 type=\"number\"\n//                 placeholder=\"Bill Rate Margin\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.BillRateMargin}\n//               />\n//               {validationErrors.BillRateMargin && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.BillRateMargin}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ResumeSource\"\n//               >\n//                 Resume Source\n//               </label>\n//               <input\n//                 id=\"ResumeSource\"\n//                 type=\"String\"\n//                 placeholder=\"Resume Source\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ResumeSource}\n//               />\n//               {validationErrors.ResumeSource && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ResumeSource}\n//                 </p>\n//               )}\n//             </div>\n\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"EmailId\"\n//               >\n//                 Email ID\n//               </label>\n//               <input\n//                 id=\"EmailId\"\n//                 type=\"String\"\n//                 placeholder=\"Email ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.EmailId}\n//               />\n//               {validationErrors.EmailId && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.EmailId}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"LinkedInID\"\n//               >\n//                 LinkedIn ID\n//               </label>\n//               <input\n//                 id=\"LinkedInID\"\n//                 type=\"String\"\n//                 placeholder=\"LinkedIn ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.LinkedInID}\n//               />\n//               {validationErrors.LinkedInID && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.LinkedInID}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"EmployerInformation\"\n//               >\n//                 Employer Information\n//               </label>\n//               <input\n//                 id=\"EmployerInformation\"\n//                 type=\"String\"\n//                 placeholder=\"Employer Information\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.EmployerInformation}\n//               />\n//               {validationErrors.EmployerInformation && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.EmployerInformation}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ProfessionalReferences\"\n//               >\n//                 Professional References\n//               </label>\n//               <input\n//                 id=\"ProfessionalReferences\"\n//                 type=\"String\"\n//                 placeholder=\"Professional References \"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ProfessionalReferences}\n//               />\n//               {validationErrors.ProfessionalReferences && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ProfessionalReferences}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"DOB\">\n//                 DOB\n//               </label>\n//               <input\n//                 id=\"DOB\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.DOB}\n//               />\n//               {validationErrors.DOB && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.DOB}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqSkills\"\n//               >\n//                 Required Skills\n//               </label>\n//               <input\n//                 id=\"ReqSkills\"\n//                 type=\"String\"\n//                 placeholder=\"Required Skills\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqSkills}\n//               />\n//               {validationErrors.ReqSkills && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqSkills}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ResumeFormattingNeeded\"\n//               >\n//                 Resume Formatting Needed?\n//               </label>\n//               <input\n//                 id=\"ResumeFormattingNeeded\"\n//                 type=\"String\"\n//                 placeholder=\"Resume Formating Needed?\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ResumeFormattingNeeded}\n//               />\n//               {validationErrors.ResumeFormattingNeeded && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ResumeFormattingNeeded}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"FormattedBy\"\n//               >\n//                 Formatted By\n//               </label>\n//               <input\n//                 id=\"FormattedBy\"\n//                 type=\"String\"\n//                 placeholder=\"Formated By\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.FormattedBy}\n//               />\n//               {validationErrors.FormattedBy && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.FormattedBy}\n//                 </p>\n//               )}\n//             </div>\n\n//             <div className=\"mb-4\">\n//               <label\n//                 htmlFor=\"Resume\"\n//                 className=\"block text-sm font-medium text-white\"\n//               >\n//                 Resume\n//               </label>\n//               <input\n//                 id=\"Resume\"\n//                 name=\"Resume\"\n//                 type=\"file\"\n//                 onChange={handleInputChange}\n//                 ref={resumeInputRef}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n//               />\n//               {validationErrors[\"Resume\"] && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors[\"Resume\"]}\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               type=\"submit\"\n//               className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//             >\n//               Submit\n//             </button>\n//           </div>\n//         </form>\n//       </section>\n//       {showPopup && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n//           <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n//             <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n//             <p>Your form has been submitted successfully.</p>\n//             <button\n//               onClick={handleClosePopup}\n//               disabled={isSubmitting}\n//               className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Close\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default SuccessPage;\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SuccessPage() {\n  _s();\n  const initialFormData = {\n    FullName: \"\",\n    ReqId: \"\",\n    ReqTitle: \"\",\n    Role: \"\",\n    ReqCreationDate: \"\",\n    VendorID: \"\",\n    BillRate: \"\",\n    ImmigrationStatus: \"\",\n    ContractType: \"\",\n    SubmissionDate: \"\",\n    ReqSubmissionEndDate: \"\",\n    CandidateCurrentLocation: \"\",\n    ContactNumber: \"\",\n    RecruiterName: \"\",\n    State: \"\",\n    SubmissionStatus: \"\",\n    VendorRate: \"\",\n    CandidatePayRate: \"\",\n    BillRateMargin: \"\",\n    ResumeSource: \"\",\n    EmailId: \"\",\n    LinkedInID: \"\",\n    EmployerInformation: \"\",\n    ProfessionalReferences: \"\",\n    DOB: \"\",\n    ReqSkills: \"\",\n    ResumeFormattingNeeded: \"\",\n    FormattedBy: \"\",\n    Resume: null\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const resumeInputRef = useRef(null);\n  const isValidEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\n  const handleInputChange = e => {\n    const {\n      id,\n      value,\n      files\n    } = e.target;\n    if (id === \"Resume\" && files) {\n      const file = files[0];\n      if (!file) return;\n      const allowedTypes = [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n      if (!allowedTypes.includes(file.type) || file.size > 1024 * 1024 * 10) {\n        setValidationErrors(prevErrors => ({\n          ...prevErrors,\n          Resume: \"Only PDF or DOC files under 10MB are allowed.\"\n        }));\n      } else {\n        setFormData(prevFormData => ({\n          ...prevFormData,\n          Resume: file\n        }));\n        setValidationErrors(prevErrors => {\n          const newErrors = {\n            ...prevErrors\n          };\n          delete newErrors.Resume;\n          return newErrors;\n        });\n      }\n    } else {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [id]: value\n      }));\n      setValidationErrors(prevErrors => {\n        const newErrors = {\n          ...prevErrors\n        };\n        delete newErrors[id];\n        return newErrors;\n      });\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n    Object.keys(formData).forEach(key => {\n      if (!formData[key] && key !== \"Resume\") {\n        newErrors[key] = \"This field is required.\";\n        isValid = false;\n      }\n    });\n    if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n      newErrors.EmailId = \"Invalid email format.\";\n      isValid = false;\n    }\n    if (!formData.Resume) {\n      newErrors.Resume = \"Please upload a resume.\";\n      isValid = false;\n    }\n    setValidationErrors(newErrors);\n    return isValid;\n  };\n  const uploadResume = async file => {\n    const filename = encodeURIComponent(file.name);\n    const uploadUrl = `${process.env.REACT_APP_API_URL}/upload/${filename}`;\n    const fileData = new FormData();\n    fileData.append(\"file\", file);\n    try {\n      const response = await fetch(uploadUrl, {\n        method: \"POST\",\n        body: fileData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      console.log(\"Server response:\", data.message);\n      // Assuming the backend response contains the URL or path of the uploaded file\n      return data.url || \"Upload successful, URL not provided\";\n    } catch (error) {\n      console.error(\"Upload Error:\", error);\n      throw error;\n    }\n  };\n  const submitForm = async () => {\n    const submitUrl = \"https://mkou1u2f62.execute-api.us-east-1.amazonaws.com/Prod/submit\";\n    try {\n      const response = await fetch(submitUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) throw new Error(\"Failed to submit form.\");\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Submission error:\", error);\n      throw error;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsSubmitting(true);\n    try {\n      let resumeUrl = \"\";\n      if (formData.Resume) {\n        resumeUrl = await uploadResume(formData.Resume);\n      }\n      const updatedFormData = {\n        ...formData,\n        ResumeUrl: resumeUrl\n      };\n      await submitForm(updatedFormData);\n      setShowPopup(true);\n      setFormData(initialFormData);\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setFormData(initialFormData);\n    setValidationErrors({});\n    if (resumeInputRef.current) {\n      resumeInputRef.current.value = \"\";\n    }\n  };\n\n  // Dynamically generate form fields\n  const renderFormFields = () => {\n    return Object.entries(initialFormData).map(([key, value]) => {\n      if (key === \"Resume\") return null; // Skip rendering for Resume field here\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          className: \"text-white dark:text-gray-200\",\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: key.includes(\"Date\") || key.includes(\"EmailId\") ? \"text\" : \"String\",\n          placeholder: key,\n          value: formData[key],\n          onChange: handleInputChange,\n          className: \"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 11\n        }, this), validationErrors[key] && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-xs italic\",\n          children: validationErrors[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold text-white capitalize dark:text-white\",\n        children: \"Employee Information Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\",\n          children: [renderFormFields(), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Resume\",\n              className: \"block text-sm font-medium text-white\",\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"Resume\",\n              name: \"Resume\",\n              type: \"file\",\n              onChange: handleInputChange,\n              ref: resumeInputRef,\n              className: \"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 15\n            }, this), validationErrors[\"Resume\"] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs italic\",\n              children: validationErrors[\"Resume\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: \"col-span-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-4\",\n          children: \"Submission Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your form has been submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClosePopup,\n          className: \"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1067,\n    columnNumber: 5\n  }, this);\n}\n_s(SuccessPage, \"osro9qDtlEGVyyuyGb/+RYuMuFY=\");\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","SuccessPage","_s","initialFormData","FullName","ReqId","ReqTitle","Role","ReqCreationDate","VendorID","BillRate","ImmigrationStatus","ContractType","SubmissionDate","ReqSubmissionEndDate","CandidateCurrentLocation","ContactNumber","RecruiterName","State","SubmissionStatus","VendorRate","CandidatePayRate","BillRateMargin","ResumeSource","EmailId","LinkedInID","EmployerInformation","ProfessionalReferences","DOB","ReqSkills","ResumeFormattingNeeded","FormattedBy","Resume","formData","setFormData","validationErrors","setValidationErrors","showPopup","setShowPopup","isSubmitting","setIsSubmitting","resumeInputRef","isValidEmail","email","test","handleInputChange","e","id","value","files","target","file","allowedTypes","includes","type","size","prevErrors","prevFormData","newErrors","validateForm","isValid","Object","keys","forEach","key","uploadResume","filename","encodeURIComponent","name","uploadUrl","process","env","REACT_APP_API_URL","fileData","FormData","append","response","fetch","method","body","data","json","ok","Error","status","console","log","message","url","error","submitForm","submitUrl","headers","JSON","stringify","handleSubmit","preventDefault","resumeUrl","updatedFormData","ResumeUrl","alert","handleClosePopup","current","renderFormFields","entries","map","children","htmlFor","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onSubmit","ref","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/sachin_veera/Desktop/ats-cloudinityinc/src/pages/SuccessPage.jsx"],"sourcesContent":["// import React, { useState, useRef } from \"react\";\n\n// function SuccessPage() {\n//   const initialFormData = {\n//     FullName: \"\",\n//     // RequiredID: \"\",\n//     ReqId: \"\",\n//     ReqTitle: \"\",\n//     Role: \"\",\n//     ReqCreationDate: \"\",\n//     VendorID: \"\",\n//     ImmigrationStatus: \"\",\n//     ContractType: \"\",\n//     SubmissionDate: \"\",\n//     ReqSubmissionEndDate: \"\",\n//     CandidateCurrentLocation: \"\",\n//     ContactNumber: \"\",\n//     RecruiterName: \"\",\n//     State: \"\",\n//     SubmissionStatus: \"\",\n//     VendorRate: \"\",\n//     CandidatePayRate: \"\",\n//     BillRateMargin: \"\",\n//     BillRate: \"\",\n//     ResumeSource: \"\",\n//     EmailId: \"\",\n//     LinkedInID: \"\",\n//     EmployerInformation: \"\",\n//     ProfessionalReferences: \"\",\n//     DOB: \"\",\n//     ReqSkills: \"\",\n//     ResumeFormattingNeeded: \"\",\n//     FormattedBy: \"\",\n//     Resume: null, // Placeholder for the resume file\n//   };\n//   const [formData, setFormData] = useState(initialFormData);\n//   const [validationErrors, setValidationErrors] = useState({});\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const resumeInputRef = useRef(null);\n\n//   const isValidEmail = (email) => {\n//     return /\\S+@\\S+\\.\\S+/.test(email);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { id, value, files } = e.target;\n//     if (id === \"Resume\" && files) {\n//       const file = files[0];\n//       if (file) {\n//         const allowedTypes = [\n//           \"application/pdf\",\n//           \"application/msword\",\n//           \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n//         ];\n//         if (!allowedTypes.includes(file.type) || file.size > 1024 * 1024 * 10) {\n//           setValidationErrors({\n//             ...validationErrors,\n//             Resume: \"Only PDF or DOC files under 10MB are allowed.\",\n//           });\n//         } else {\n//           setFormData({\n//             ...formData,\n//             Resume: file,\n//           });\n//           let newErrors = { ...validationErrors };\n//           delete newErrors.Resume;\n//           setValidationErrors(newErrors);\n//         }\n//       }\n//     } else {\n//       setFormData({\n//         ...formData,\n//         [id]: value,\n//       });\n//       let newErrors = { ...validationErrors };\n//       delete newErrors[id];\n//       setValidationErrors(newErrors);\n//     }\n//   };\n\n//   const validateForm = () => {\n//     let isValid = true;\n//     const newErrors = {};\n//     Object.keys(formData).forEach((key) => {\n//       if (!formData[key] && key !== \"Resume\") {\n//         newErrors[key] = \"This field is required.\";\n//         isValid = false;\n//       }\n//     });\n//     if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n//       newErrors.EmailId = \"Invalid email format.\";\n//       isValid = false;\n//     }\n\n//     if (!formData.Resume) {\n//       newErrors.Resume = \"Please upload a resume.\";\n//       isValid = false;\n//     }\n\n//     setValidationErrors(newErrors);\n//     return isValid;\n//   };\n//   const uploadResume = async (file) => {\n//     const filename = encodeURIComponent(file.name);\n//     // const uploadUrl = `https://lrl0r0t06c.execute-api.us-east-1.amazonaws.com/Prod/upload/${filename}`;\n//     const uploadUrl = `${process.env.REACT_APP_API_URL}/${filename}`;\n//     const fileData = new FormData();\n//     fileData.append(\"file\", file);\n\n//     try {\n//       const response = await fetch(uploadUrl, {\n//         method: \"POST\",\n//         body: fileData,\n//       });\n//       const data = await response.json();\n\n//       console.log(\"Server response:\", data);\n\n//       if (!response.ok) {\n//         throw new Error(`Server responded with status: ${response.status}`);\n//       }\n\n//       // Since the server confirms success but doesn't provide a URL, log the success and maybe return a success message instead\n//       if (data.message === \"File uploaded successfully\") {\n//         console.log(data.message);\n//         // Return a static message or a mock URL, or adjust as needed\n//         return \"Upload successful, no URL provided\"; // Placeholder return value\n//       } else {\n//         throw new Error(\n//           \"Unexpected server response, upload may not be successful.\"\n//         );\n//       }\n//     } catch (error) {\n//       console.error(\"Upload Error:\", error);\n//       throw error;\n//     }\n//   };\n\n//   //Dynamo DB API Call\n\n//   const submitForm = async () => {\n//     // Assuming you have an API endpoint to submit form data to DynamoDB\n//     const submitUrl =\n//       \"https://mkou1u2f62.execute-api.us-east-1.amazonaws.com/Prod/submit\";\n//     try {\n//       const response = await fetch(submitUrl, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(formData),\n//       });\n//       if (!response.ok) throw new Error(\"Failed to submit form.\");\n//       return await response.json(); // or handle success without expecting a return value\n//     } catch (error) {\n//       console.error(\"Submission error:\", error);\n//       throw error;\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!validateForm()) return;\n//     setIsSubmitting(true);\n\n//     try {\n//       if (formData.Resume) {\n//         const resumeUrl = await uploadResume(formData.Resume);\n//         // Update formData with the resume URL for submission\n//         const updatedFormData = { ...formData, ResumeUrl: resumeUrl };\n//         await submitForm(updatedFormData);\n//         setShowPopup(true); // Show success message\n//         setFormData(initialFormData); // Reset form\n//       } else {\n//         // Handle the case where a resume is required but not uploaded\n//         throw new Error(\"Resume is required.\");\n//       }\n//     } catch (error) {\n//       alert(`Error: ${error.message}`);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   const handleClosePopup = () => {\n//     setShowPopup(false);\n//     setFormData(initialFormData);\n//     setValidationErrors({});\n//     if (resumeInputRef.current) {\n//       resumeInputRef.current.value = \"\";\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* The form component with Tailwind CSS */}\n//       <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n//         <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n//           Employee Information Form\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n//             {/* Input fields generated based on formData */}\n//             {/* {Object.keys(initialFormData)\n//               .filter((key) => key !== \"Resume\")\n//               .map((key) => (\n//                 <div key={key} className=\"mb-4\">\n//                   <label\n//                     htmlFor={key}\n//                     className=\"text-white dark:text-gray-200 block text-sm font-bold mb-2\"\n//                   >\n//                     {key.replace(/([A-Z])/g, \" $1\").trim()}\n//                   </label>\n//                   <input\n//                     // type=\"text\"\n//                     type={key === \"RequiredID\" ? \"number\" : \"String\"} // Conditionally set the input type\n//                     id={key}\n//                     name={key}\n//                     value={formData[key]}\n//                     onChange={handleInputChange}\n//                     className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                   />\n//                   {validationErrors[key] && (\n//                     <p className=\"text-red-500 text-xs italic\">\n//                       {validationErrors[key]}\n//                     </p>\n//                   )}\n//                 </div>\n//               ))} */}\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"FullName\"\n//               >\n//                 Full Name\n//               </label>\n//               <input\n//                 id=\"FullName\"\n//                 type=\"String\"\n//                 placeholder=\"Full Name\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.FullName}\n//               />\n//               {validationErrors.FullName && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.FullName}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"ReqId\">\n//                 Required ID\n//               </label>\n//               <input\n//                 id=\"ReqId\"\n//                 type=\"number\"\n//                 placeholder=\"ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqId}\n//               />\n//               {validationErrors.ReqId && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqId}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqTitle\"\n//               >\n//                 Required Title\n//               </label>\n//               <input\n//                 id=\"ReqTitle\"\n//                 type=\"String\"\n//                 placeholder=\"Title\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqTitle}\n//               />\n//               {validationErrors.ReqTitle && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqTitle}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"Role\">\n//                 Role\n//               </label>\n//               <input\n//                 id=\"Role\"\n//                 type=\"String\"\n//                 placeholder=\"Role\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.Role}\n//               />\n//               {validationErrors.Role && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.Role}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqCreationDate\"\n//               >\n//                 Required Creation Date\n//               </label>\n//               <input\n//                 id=\"ReqCreationDate\"\n//                 // type=\"Number\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqCreationDate}\n//               />\n//               {validationErrors.ReqCreationDate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqCreationDate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"VendorID\"\n//               >\n//                 Vendor ID\n//               </label>\n//               <input\n//                 id=\"VendorID\"\n//                 type=\"String\"\n//                 placeholder=\"Vendor ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.VendorID}\n//               />\n//               {validationErrors.VendorID && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.VendorID}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"BillRate\"\n//               >\n//                 Bill Rate\n//               </label>\n//               <input\n//                 id=\"BillRate\"\n//                 type=\"number\"\n//                 placeholder=\"Bill Rate\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.BillRate}\n//               />\n//               {validationErrors.BillRate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.BillRate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ImmigrationStatus\"\n//               >\n//                 Immigration Status\n//               </label>\n//               <input\n//                 id=\"ImmigrationStatus\"\n//                 type=\"String\"\n//                 placeholder=\"Immigration Status\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ImmigrationStatus}\n//               />\n//               {validationErrors.ImmigrationStatus && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ImmigrationStatus}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ContractType\"\n//               >\n//                 Contract Type\n//               </label>\n//               <input\n//                 id=\"ContractType\"\n//                 type=\"String\"\n//                 placeholder=\"Contract Type\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ContractType}\n//               />\n//               {validationErrors.ContractType && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ContractType}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"SubmissionDate\"\n//               >\n//                 Submission Date\n//               </label>\n//               <input\n//                 id=\"SubmissionDate\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.SubmissionDate}\n//               />\n//               {validationErrors.SubmissionDate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.SubmissionDate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqSubmissionEndDate\"\n//               >\n//                 Required Submission end Date\n//               </label>\n//               <input\n//                 id=\"ReqSubmissionEndDate\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqSubmissionEndDate}\n//               />\n//               {validationErrors.ReqSubmissionEndDate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqSubmissionEndDate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"CandidateCurrentLocation\"\n//               >\n//                 Candidate Current Location\n//               </label>\n//               <input\n//                 id=\"CandidateCurrentLocation\"\n//                 type=\"String\"\n//                 placeholder=\"Candidate Current Location\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.CandidateCurrentLocation}\n//               />\n//               {validationErrors.CandidateCurrentLocation && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.CandidateCurrentLocation}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ContactNumber\"\n//               >\n//                 Contact Number\n//               </label>\n//               <input\n//                 id=\"ContactNumber\"\n//                 type=\"number\"\n//                 placeholder=\"Contact Number\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ContactNumber}\n//               />\n//               {validationErrors.ContactNumber && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ContactNumber}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"RecruiterName\"\n//               >\n//                 Recruiter Name\n//               </label>\n//               <input\n//                 id=\"RecruiterName\"\n//                 type=\"String\"\n//                 placeholder=\"Recruiter Name\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.RecruiterName}\n//               />\n//               {validationErrors.RecruiterName && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.RecruiterName}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"State\">\n//                 State\n//               </label>\n//               <input\n//                 id=\"State\"\n//                 type=\"String\"\n//                 placeholder=\"State\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.State}\n//               />\n//               {validationErrors.State && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.State}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"SubmissionStatus\"\n//               >\n//                 Submission Status\n//               </label>\n//               <input\n//                 id=\"SubmissionStatus\"\n//                 type=\"String\"\n//                 placeholder=\"Submission Status\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.SubmissionStatus}\n//               />\n//               {validationErrors.SubmissionStatus && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.SubmissionStatus}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"VendorRate\"\n//               >\n//                 Vendor Rate\n//               </label>\n//               <input\n//                 id=\"VendorRate\"\n//                 type=\"String\"\n//                 placeholder=\"Vendor Rate \"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.VendorRate}\n//               />\n//               {validationErrors.VendorRate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.VendorRate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"CandidatePayRate\"\n//               >\n//                 Candidate Pay Rate\n//               </label>\n//               <input\n//                 id=\"CandidatePayRate\"\n//                 type=\"number\"\n//                 placeholder=\"Candidate Pay Rate\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.CandidatePayRate}\n//               />\n//               {validationErrors.CandidatePayRate && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.CandidatePayRate}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"BillRateMargin\"\n//               >\n//                 Bill Rate Margin\n//               </label>\n//               <input\n//                 id=\"BillRateMargin\"\n//                 type=\"number\"\n//                 placeholder=\"Bill Rate Margin\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.BillRateMargin}\n//               />\n//               {validationErrors.BillRateMargin && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.BillRateMargin}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ResumeSource\"\n//               >\n//                 Resume Source\n//               </label>\n//               <input\n//                 id=\"ResumeSource\"\n//                 type=\"String\"\n//                 placeholder=\"Resume Source\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ResumeSource}\n//               />\n//               {validationErrors.ResumeSource && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ResumeSource}\n//                 </p>\n//               )}\n//             </div>\n\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"EmailId\"\n//               >\n//                 Email ID\n//               </label>\n//               <input\n//                 id=\"EmailId\"\n//                 type=\"String\"\n//                 placeholder=\"Email ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.EmailId}\n//               />\n//               {validationErrors.EmailId && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.EmailId}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"LinkedInID\"\n//               >\n//                 LinkedIn ID\n//               </label>\n//               <input\n//                 id=\"LinkedInID\"\n//                 type=\"String\"\n//                 placeholder=\"LinkedIn ID\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.LinkedInID}\n//               />\n//               {validationErrors.LinkedInID && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.LinkedInID}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"EmployerInformation\"\n//               >\n//                 Employer Information\n//               </label>\n//               <input\n//                 id=\"EmployerInformation\"\n//                 type=\"String\"\n//                 placeholder=\"Employer Information\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.EmployerInformation}\n//               />\n//               {validationErrors.EmployerInformation && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.EmployerInformation}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ProfessionalReferences\"\n//               >\n//                 Professional References\n//               </label>\n//               <input\n//                 id=\"ProfessionalReferences\"\n//                 type=\"String\"\n//                 placeholder=\"Professional References \"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ProfessionalReferences}\n//               />\n//               {validationErrors.ProfessionalReferences && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ProfessionalReferences}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label className=\"text-white dark:text-gray-200\" htmlFor=\"DOB\">\n//                 DOB\n//               </label>\n//               <input\n//                 id=\"DOB\"\n//                 type=\"String\"\n//                 placeholder=\"MM/DD/YYYY\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.DOB}\n//               />\n//               {validationErrors.DOB && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.DOB}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ReqSkills\"\n//               >\n//                 Required Skills\n//               </label>\n//               <input\n//                 id=\"ReqSkills\"\n//                 type=\"String\"\n//                 placeholder=\"Required Skills\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ReqSkills}\n//               />\n//               {validationErrors.ReqSkills && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ReqSkills}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"ResumeFormattingNeeded\"\n//               >\n//                 Resume Formatting Needed?\n//               </label>\n//               <input\n//                 id=\"ResumeFormattingNeeded\"\n//                 type=\"String\"\n//                 placeholder=\"Resume Formating Needed?\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.ResumeFormattingNeeded}\n//               />\n//               {validationErrors.ResumeFormattingNeeded && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.ResumeFormattingNeeded}\n//                 </p>\n//               )}\n//             </div>\n//             <div>\n//               <label\n//                 className=\"text-white dark:text-gray-200\"\n//                 htmlFor=\"FormattedBy\"\n//               >\n//                 Formatted By\n//               </label>\n//               <input\n//                 id=\"FormattedBy\"\n//                 type=\"String\"\n//                 placeholder=\"Formated By\"\n//                 className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n//                 onChange={handleInputChange} // attach handleInputChange here\n//                 value={formData.FormattedBy}\n//               />\n//               {validationErrors.FormattedBy && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors.FormattedBy}\n//                 </p>\n//               )}\n//             </div>\n\n//             <div className=\"mb-4\">\n//               <label\n//                 htmlFor=\"Resume\"\n//                 className=\"block text-sm font-medium text-white\"\n//               >\n//                 Resume\n//               </label>\n//               <input\n//                 id=\"Resume\"\n//                 name=\"Resume\"\n//                 type=\"file\"\n//                 onChange={handleInputChange}\n//                 ref={resumeInputRef}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n//               />\n//               {validationErrors[\"Resume\"] && (\n//                 <p className=\"text-red-500 text-xs italic\">\n//                   {validationErrors[\"Resume\"]}\n//                 </p>\n//               )}\n//             </div>\n//             <button\n//               type=\"submit\"\n//               className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//             >\n//               Submit\n//             </button>\n//           </div>\n//         </form>\n//       </section>\n//       {showPopup && (\n//         <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n//           <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n//             <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n//             <p>Your form has been submitted successfully.</p>\n//             <button\n//               onClick={handleClosePopup}\n//               disabled={isSubmitting}\n//               className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//             >\n//               Close\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default SuccessPage;\n\nimport React, { useState, useRef } from \"react\";\n\nfunction SuccessPage() {\n  const initialFormData = {\n    FullName: \"\",\n    ReqId: \"\",\n    ReqTitle: \"\",\n    Role: \"\",\n    ReqCreationDate: \"\",\n    VendorID: \"\",\n    BillRate: \"\",\n    ImmigrationStatus: \"\",\n    ContractType: \"\",\n    SubmissionDate: \"\",\n    ReqSubmissionEndDate: \"\",\n    CandidateCurrentLocation: \"\",\n    ContactNumber: \"\",\n    RecruiterName: \"\",\n    State: \"\",\n    SubmissionStatus: \"\",\n    VendorRate: \"\",\n    CandidatePayRate: \"\",\n    BillRateMargin: \"\",\n    ResumeSource: \"\",\n    EmailId: \"\",\n    LinkedInID: \"\",\n    EmployerInformation: \"\",\n    ProfessionalReferences: \"\",\n    DOB: \"\",\n    ReqSkills: \"\",\n    ResumeFormattingNeeded: \"\",\n    FormattedBy: \"\",\n    Resume: null,\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const resumeInputRef = useRef(null);\n\n  const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email);\n\n  const handleInputChange = (e) => {\n    const { id, value, files } = e.target;\n    if (id === \"Resume\" && files) {\n      const file = files[0];\n      if (!file) return;\n      const allowedTypes = [\n        \"application/pdf\",\n        \"application/msword\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      ];\n      if (!allowedTypes.includes(file.type) || file.size > 1024 * 1024 * 10) {\n        setValidationErrors((prevErrors) => ({\n          ...prevErrors,\n          Resume: \"Only PDF or DOC files under 10MB are allowed.\",\n        }));\n      } else {\n        setFormData((prevFormData) => ({ ...prevFormData, Resume: file }));\n        setValidationErrors((prevErrors) => {\n          const newErrors = { ...prevErrors };\n          delete newErrors.Resume;\n          return newErrors;\n        });\n      }\n    } else {\n      setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n      setValidationErrors((prevErrors) => {\n        const newErrors = { ...prevErrors };\n        delete newErrors[id];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n\n    Object.keys(formData).forEach((key) => {\n      if (!formData[key] && key !== \"Resume\") {\n        newErrors[key] = \"This field is required.\";\n        isValid = false;\n      }\n    });\n\n    if (formData.EmailId && !isValidEmail(formData.EmailId)) {\n      newErrors.EmailId = \"Invalid email format.\";\n      isValid = false;\n    }\n\n    if (!formData.Resume) {\n      newErrors.Resume = \"Please upload a resume.\";\n      isValid = false;\n    }\n\n    setValidationErrors(newErrors);\n    return isValid;\n  };\n\n  const uploadResume = async (file) => {\n    const filename = encodeURIComponent(file.name);\n    const uploadUrl = `${process.env.REACT_APP_API_URL}/upload/${filename}`;\n    const fileData = new FormData();\n    fileData.append(\"file\", file);\n\n    try {\n      const response = await fetch(uploadUrl, {\n        method: \"POST\",\n        body: fileData,\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      console.log(\"Server response:\", data.message);\n      // Assuming the backend response contains the URL or path of the uploaded file\n      return data.url || \"Upload successful, URL not provided\";\n    } catch (error) {\n      console.error(\"Upload Error:\", error);\n      throw error;\n    }\n  };\n\n  const submitForm = async () => {\n    const submitUrl =\n      \"https://mkou1u2f62.execute-api.us-east-1.amazonaws.com/Prod/submit\";\n    try {\n      const response = await fetch(submitUrl, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n      if (!response.ok) throw new Error(\"Failed to submit form.\");\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Submission error:\", error);\n      throw error;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsSubmitting(true);\n\n    try {\n      let resumeUrl = \"\";\n      if (formData.Resume) {\n        resumeUrl = await uploadResume(formData.Resume);\n      }\n      const updatedFormData = { ...formData, ResumeUrl: resumeUrl };\n      await submitForm(updatedFormData);\n      setShowPopup(true);\n      setFormData(initialFormData);\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setFormData(initialFormData);\n    setValidationErrors({});\n    if (resumeInputRef.current) {\n      resumeInputRef.current.value = \"\";\n    }\n  };\n\n  // Dynamically generate form fields\n  const renderFormFields = () => {\n    return Object.entries(initialFormData).map(([key, value]) => {\n      if (key === \"Resume\") return null; // Skip rendering for Resume field here\n      return (\n        <div key={key}>\n          <label htmlFor={key} className=\"text-white dark:text-gray-200\">\n            {key}\n          </label>\n          <input\n            id={key}\n            type={\n              key.includes(\"Date\") || key.includes(\"EmailId\")\n                ? \"text\"\n                : \"String\"\n            }\n            placeholder={key}\n            value={formData[key]}\n            onChange={handleInputChange}\n            className=\"block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\"\n          />\n          {validationErrors[key] && (\n            <p className=\"text-red-500 text-xs italic\">\n              {validationErrors[key]}\n            </p>\n          )}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <section className=\"max-w-4xl p-6 mx-auto bg-indigo-600 rounded-md shadow-md dark:bg-gray-800 mt-20\">\n        <h1 className=\"text-xl font-bold text-white capitalize dark:text-white\">\n          Employee Information Form\n        </h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"grid grid-cols-1 gap-6 mt-4 sm:grid-cols-2\">\n            {renderFormFields()}\n            {/* Resume field */}\n            <div>\n              <label\n                htmlFor=\"Resume\"\n                className=\"block text-sm font-medium text-white\"\n              >\n                Resume\n              </label>\n              <input\n                id=\"Resume\"\n                name=\"Resume\"\n                type=\"file\"\n                onChange={handleInputChange}\n                ref={resumeInputRef}\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n              />\n              {validationErrors[\"Resume\"] && (\n                <p className=\"text-red-500 text-xs italic\">\n                  {validationErrors[\"Resume\"]}\n                </p>\n              )}\n            </div>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"col-span-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </section>\n      {showPopup && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center\">\n          <div className=\"bg-white p-5 rounded-lg shadow-lg\">\n            <h2 className=\"text-lg mb-4\">Submission Successful</h2>\n            <p>Your form has been submitted successfully.</p>\n            <button\n              onClick={handleClosePopup}\n              className=\"mt-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SuccessPage;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}