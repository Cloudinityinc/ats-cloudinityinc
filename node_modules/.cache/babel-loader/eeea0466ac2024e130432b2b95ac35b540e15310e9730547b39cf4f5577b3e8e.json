{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import authenticateUser from \"./authenticateUser\";\n\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const handleSignIn = async (event) => {\n//     event.preventDefault();\n//     setError(\"\"); // Clear any existing error messages\n\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n\n//       if (response.status === \"newPasswordRequired\") {\n//         setIsChangingPassword(true);\n//       } else if (response.status === \"success\") {\n//         console.log(\"Login successful!\", response.data);\n//         navigate(\"/success\"); // Redirect on successful login using useNavigate\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   const handleNewPasswordSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n//       if (response.status === \"success\") {\n//         console.log(\"Password change and login successful!\", response.data);\n//         navigate(\"/success\"); // Redirect on successful password change and login\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!isChangingPassword ? (\n//         // Regular login form\n//         <form onSubmit={handleSignIn}>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             placeholder=\"Username\"\n//           />\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"Password\"\n//           />\n//           <button type=\"submit\">Login</button>\n//         </form>\n//       ) : (\n//         // New password form\n//         <form onSubmit={handleNewPasswordSubmit}>\n//           <input\n//             type=\"password\"\n//             value={newPassword}\n//             onChange={(e) => setNewPassword(e.target.value)}\n//             placeholder=\"New Password\"\n//           />\n//           <button type=\"submit\">Set New Password</button>\n//         </form>\n//       )}\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/sachin_veera/Desktop/sample-react-app/src/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import authenticateUser from \"./authenticateUser\";\n\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const handleSignIn = async (event) => {\n//     event.preventDefault();\n//     setError(\"\"); // Clear any existing error messages\n\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n\n//       if (response.status === \"newPasswordRequired\") {\n//         setIsChangingPassword(true);\n//       } else if (response.status === \"success\") {\n//         console.log(\"Login successful!\", response.data);\n//         navigate(\"/success\"); // Redirect on successful login using useNavigate\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   const handleNewPasswordSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await authenticateUser(username, password, newPassword);\n//       if (response.status === \"success\") {\n//         console.log(\"Password change and login successful!\", response.data);\n//         navigate(\"/success\"); // Redirect on successful password change and login\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!isChangingPassword ? (\n//         // Regular login form\n//         <form onSubmit={handleSignIn}>\n//           <input\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             placeholder=\"Username\"\n//           />\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"Password\"\n//           />\n//           <button type=\"submit\">Login</button>\n//         </form>\n//       ) : (\n//         // New password form\n//         <form onSubmit={handleNewPasswordSubmit}>\n//           <input\n//             type=\"password\"\n//             value={newPassword}\n//             onChange={(e) => setNewPassword(e.target.value)}\n//             placeholder=\"New Password\"\n//           />\n//           <button type=\"submit\">Set New Password</button>\n//         </form>\n//       )}\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default Login;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}